
#include <SFML\Graphics.hpp>
#include <string>
#include <iostream>
#include <string.h>
#include <conio.h>
#include<fstream>
#include <sstream>
#include <cstring>
#include <windows.h>
#include <stdio.h>


using namespace std;
const int maxShoppers = 25, maxOwners = 25, maxProds = 10, maxPass = 32;
int LogIndex = maxOwners, day = 0, month = 0, LogID = 0;

struct views {

	int x;
	int y;

};
struct num {
	int nump = 0;
	int index = 0;
	views num[100];

}c;
struct  save
{
	views sav[100];
	int amount[100];
	double sub[100];

}k;
struct Clothing
{
	string Size;
	string Type;
	string Color;
};
struct Address {
	string Country;
	string City;
};
struct numm {
	int nump = 0;
	int index = 0;
}h;
struct cart {
	int quantity;
	string buyproduct = { 0 };
	double index;
	double index2;
	double price;
	string shop;
	int arri;
	int arrj;
	double subtotal = 0;
} shopperCart[100];
struct Product
{
	string productName = { 0 };
	int productPrice = 0;
	double oldPrice = 0;
	string Category;
	Clothing Clothes;
	int Quantity = 0;
	int counter = 0;
	int sum = 0;
	int avgRating;
	int month = 0;
	int day = 0;
};
struct Shop
{
	string ShopName;
	Address Add;
	string Category;
	Product products[maxProds];
	int countProd = 0;
};
struct counts {
	int countOwn = 0;
	int countShopper = 0;
}s;
struct Owner
{
	string Name;
	int ID;
	char Password[maxPass];
	int PassNum;
	int Age;
	string Gender;
	Address Add;
	Shop Shops;
} Owners[maxOwners];
struct shopper {
	string name;
	int id;
	char pass[maxPass];
	int passnum;
	int age;
	string gender;
	Address Add;
	double purchaseHistory[10];
	int days[10];
	int months[10];
	int purchases = 0;
}Shoppers[maxShoppers];



using namespace std;

void shopperchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void ownerchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void welcome(sf::RenderWindow& window, sf::RectangleShape photo);
void regshoper(sf::RenderWindow& window, sf::RectangleShape photo);
void regowner(sf::RenderWindow& window, sf::RectangleShape photo);
void loginowner(sf::RenderWindow& window, sf::RectangleShape photo);
void loginshopper(sf::RenderWindow& window, sf::RectangleShape photo);
void scchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void search(sf::RenderWindow& window, sf::RectangleShape photo);
void regshop(sf::RenderWindow& window, sf::RectangleShape photo);
void prodchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void editshoper(sf::RenderWindow& window, sf::RectangleShape photo);
void editshop(sf::RenderWindow& window, sf::RectangleShape photo);
void editowner(sf::RenderWindow& window, sf::RectangleShape photo);
void addproduct(sf::RenderWindow& window, sf::RectangleShape photo);
void viewproduct(sf::RenderWindow& window, sf::RectangleShape photo);
void homepageOwner(sf::RenderWindow& window, sf::RectangleShape photo);
void discount(sf::RenderWindow& window, sf::RectangleShape photo);
void remove(sf::RenderWindow& window, sf::RectangleShape photo);
void viewproduct(sf::RenderWindow& window, sf::RectangleShape photo);
void viewproductsOwner(sf::RenderWindow& window, sf::RectangleShape photo);
void editprod(sf::RenderWindow& window, sf::RectangleShape photo);
void deleteshopper(sf::RenderWindow& window, sf::RectangleShape photo);
void cart(sf::RenderWindow& window, sf::RectangleShape photo);
void receipt(sf::RenderWindow& window, sf::RectangleShape photo);
void prodmenu(sf::RenderWindow& window, sf::RectangleShape photo);
void filtersmenu(sf::RenderWindow& window, sf::RectangleShape photo);
void open();
void save();




int main() {

	sf::RenderWindow window(sf::VideoMode(920, 800), "                               ONLINE SHOPPING STORE", sf::Style::Close | sf::Style::Default);
	sf::RectangleShape photo(sf::Vector2f(920.0f, 800.0f));
	photo.setPosition(0, 0);
	sf::Texture wallpaper;
	wallpaper.loadFromFile("163882.jpg");
	photo.setTexture(&wallpaper);

	open();
	prodmenu(window, photo);
	scchoice(window, photo);
	viewproduct(window, photo);
	welcome(window, photo);
	homepageOwner(window, photo);


	return 0;
}




void open() {

	ifstream Owner, Shopper, Products;
	Owner.open("Owners.txt");
	Owner >> s.countOwn;
	for (int i = 0; i < s.countOwn; i++) {
		Owner.ignore();
		getline(Owner, Owners[i].Name);
		getline(Owner, Owners[i].Gender);
		getline(Owner, Owners[i].Add.Country);
		getline(Owner, Owners[i].Add.City);
		getline(Owner, Owners[i].Shops.ShopName);
		getline(Owner, Owners[i].Shops.Category);
		getline(Owner, Owners[i].Shops.Add.Country);
		getline(Owner, Owners[i].Shops.Add.City);
		Owner >> Owners[i].ID;
		Owner >> Owners[i].Age;
		Owner >> Owners[i].PassNum;
		Owner >> Owners[i].Password;
	}
	Owners[0].Add.Country;
	Shopper.open("Shopper.txt");
	Shopper >> s.countShopper;
	for (int i = 0; i < s.countShopper; i++) {
		Shopper.ignore();
		getline(Shopper, Shoppers[i].name);
		getline(Shopper, Shoppers[i].gender);
		getline(Shopper, Shoppers[i].Add.Country);
		getline(Shopper, Shoppers[i].Add.City);
		Shopper >> Shoppers[i].id;
		Shopper >> Shoppers[i].age;
		Shopper >> Shoppers[i].passnum;
		Shopper >> Shoppers[i].pass;
		Shopper >> Shoppers[i].purchases;
		if (Shoppers[i].purchases != 0) {
			for (int j = 0; j < Shoppers[i].purchases; j++) {
				Shopper >> Shoppers[i].purchaseHistory[j];
				Shopper >> Shoppers[i].days[j];
				Shopper >> Shoppers[i].months[j];
			}
		}
	}
	Products.open("Products.txt");
	for (int i = 0; i < maxOwners; i++) {
		Products >> Owners[i].Shops.countProd;
		Products.ignore();
		if (Owners[i].Shops.countProd != 0) {
			for (int j = 0; j < Owners[i].Shops.countProd; j++) {
				getline(Products, Owners[i].Shops.products[j].productName);
				getline(Products, Owners[i].Shops.products[j].Category);
				if (Owners[i].Shops.products[j].Category == "Clothing") {

					getline(Products, Owners[i].Shops.products[j].Clothes.Color);
					Products >> Owners[i].Shops.products[j].Clothes.Type;
					Products >> Owners[i].Shops.products[j].Clothes.Size;
					Products >> Owners[i].Shops.products[j].productPrice;
					Products >> Owners[i].Shops.products[j].Quantity;
					Products >> Owners[i].Shops.products[j].avgRating;
					Products >> Owners[i].Shops.products[j].oldPrice;
					Products >> Owners[i].Shops.products[j].sum;
					Products >> Owners[i].Shops.products[j].counter;
					Products >> Owners[i].Shops.products[j].month;
					Products >> Owners[i].Shops.products[j].day;
				}
				else {
					Products >> Owners[i].Shops.products[j].productPrice;
					Products >> Owners[i].Shops.products[j].Quantity;
					Products >> Owners[i].Shops.products[j].avgRating;
					Products >> Owners[i].Shops.products[j].oldPrice;
					Products >> Owners[i].Shops.products[j].sum;
					Products >> Owners[i].Shops.products[j].counter;
					Products >> Owners[i].Shops.products[j].month;
					Products >> Owners[i].Shops.products[j].day;
				}
				Products.ignore();
			}
		}
	}
	Owner.close();
	Shopper.close();
	Products.close();

}

void save() {
	ofstream Owner, Shopper, Products;
	Owner.open("Owners.txt", ios::trunc);
	Owner << s.countOwn << endl;
	for (int i = 0; i < s.countOwn; i++) {
		Owner << Owners[i].Name << endl << Owners[i].Gender << endl << Owners[i].Add.Country << endl << Owners[i].Add.City << endl << Owners[i].Shops.ShopName << endl << Owners[i].Shops.Category << endl << Owners[i].Shops.Add.Country << endl << Owners[i].Shops.Add.City << endl << Owners[i].ID << endl << Owners[i].Age << endl << Owners[i].PassNum << endl << Owners[i].Password << '\n';
	}
	Shopper.open("Shopper.txt", ios::trunc);
	Shopper << s.countShopper << endl;
	for (int i = 0; i < s.countShopper; i++) {
		Shopper << Shoppers[i].name << endl << Shoppers[i].gender << endl << Shoppers[i].Add.Country << endl << Shoppers[i].Add.City << endl << Shoppers[i].id << endl << Shoppers[i].age << endl << Shoppers[i].passnum << endl << Shoppers[i].pass << endl;
		Shopper << Shoppers[i].purchases << endl;
		if (Shoppers[i].purchases != 0) {
			for (int j = 0; j < Shoppers[i].purchases; j++) {
				Shopper << Shoppers[i].purchaseHistory[j] << endl << Shoppers[i].days[j] << endl << Shoppers[i].months[j] << endl;
			}
		}
	}
	Products.open("Products.txt", ios::trunc);
	for (int i = 0; i < maxOwners; i++) {
		Products << Owners[i].Shops.countProd << endl;
		if (Owners[i].Shops.countProd != 0) {
			for (int j = 0; j < Owners[i].Shops.countProd; j++) {
				if (Owners[i].Shops.Category == "Clothing") {
					Products << Owners[i].Shops.products[j].productName << endl << Owners[i].Shops.products[j].Category << endl << Owners[i].Shops.products[j].Clothes.Color << endl << Owners[i].Shops.products[j].Clothes.Type << endl << Owners[i].Shops.products[j].Clothes.Size << endl << Owners[i].Shops.products[j].productPrice << endl << Owners[i].Shops.products[j].Quantity << '\n' << Owners[i].Shops.products[j].avgRating << endl << Owners[i].Shops.products[j].oldPrice << endl << Owners[i].Shops.products[j].sum << endl << Owners[i].Shops.products[j].counter << endl << Owners[i].Shops.products[j].month << endl << Owners[i].Shops.products[j].day << endl;
				}
				else {
					Products << Owners[i].Shops.products[j].productName << endl << Owners[i].Shops.products[j].Category << endl << Owners[i].Shops.products[j].productPrice << endl << Owners[i].Shops.products[j].Quantity << '\n' << Owners[i].Shops.products[j].avgRating << endl << Owners[i].Shops.products[j].oldPrice << endl << Owners[i].Shops.products[j].sum << endl << Owners[i].Shops.products[j].counter << endl << Owners[i].Shops.products[j].month << endl << Owners[i].Shops.products[j].day << endl;
				}
			}
		}
	}
	Owner.close();
	Shopper.close();
	Products.close();
}

void welcome(sf::RenderWindow& window, sf::RectangleShape photo) {
	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString(" Shopper ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString(" S. Owner ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);


	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					ownerchoice(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					shopperchoice(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}
}

void regowner(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::RectangleShape choice3(sf::Vector2f(550.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 100));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(7);

	sf::RectangleShape choice4(sf::Vector2f(550.0f, 20.0f));
	choice4.setPosition(sf::Vector2f(200, 140));
	choice4.setFillColor(sf::Color::White);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(7);

	sf::RectangleShape choice5(sf::Vector2f(150.0f, 20.0f));
	choice5.setPosition(sf::Vector2f(200, 260));
	choice5.setFillColor(sf::Color::White);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(7);

	sf::RectangleShape choice6(sf::Vector2f(150.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(600, 260));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(7);


	sf::RectangleShape choice71(sf::Vector2f(150.0f, 20.0f));
	choice71.setPosition(sf::Vector2f(200, 180));
	choice71.setFillColor(sf::Color::Transparent);
	choice71.setOutlineThickness(3);
	choice71.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice72(sf::Vector2f(150.0f, 20.0f));
	choice72.setPosition(sf::Vector2f(400, 180));
	choice72.setFillColor(sf::Color::Transparent);
	choice72.setOutlineThickness(3);
	choice72.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passout;
	sf::Text textpass(passout, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String confout;
	sf::Text textconf(confout, fontc, 25);
	textconf.setFillColor(sf::Color::Black);
	textconf.setPosition(200, 95);

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(200, 135);

	sf::Font fontgend;
	fontgend.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String gender;
	sf::Text textgend(gender, fontage, 25);
	textgend.setFillColor(sf::Color::Black);
	textgend.setPosition(200, 175);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 255);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 255);


	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Name             : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password     : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("C.Password :");
	textz.setCharacterSize(30);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(10, 90);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontl;
	fontl.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("Age                : ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 130);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Gender          : ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(10, 170);
	textd.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fonta);
	textq.setString("    Male ");
	textq.setCharacterSize(20);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(235, 177);
	textq.setStyle(sf::Text::Regular);

	sf::Font fontw;
	fontw.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textw;
	textw.setFont(fonta);
	textw.setString(" Female ");
	textw.setCharacterSize(20);
	textw.setFillColor(sf::Color::White);
	textw.setPosition(435, 177);
	textw.setStyle(sf::Text::Regular);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("Adress. ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(10, 210);
	texte.setStyle(sf::Text::Regular);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString("city                 :");
	textf.setCharacterSize(30);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(10, 250);
	textf.setStyle(sf::Text::Regular);

	sf::Font fontg;
	fontg.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textg;
	textg.setFont(fontg);
	textg.setString("Country           :");
	textg.setCharacterSize(30);
	textg.setFillColor(sf::Color::White);
	textg.setPosition(400, 250);
	textg.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("      Next   ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textid;
	textid.setFont(font);
	textid.setString("    Your ID Is : ");
	textid.setCharacterSize(40);
	textid.setFillColor(sf::Color::White);
	textid.setPosition(190, 430);
	textid.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontz);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(190, 430);
	textk.setStyle(sf::Text::Bold);

	sf::Font fontn;
	fontn.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontz);
	textn.setString("  ** Password Must Be At Least 6 Digits **  ");
	textn.setCharacterSize(28);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 430);
	textn.setStyle(sf::Text::Bold);

	sf::String pass;
	sf::String conf;


	sf::Font fontj;
	fontj.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textj;
	textj.setFont(fontz);
	textj.setString("  ** password Does Not Match ** ");
	textj.setCharacterSize(28);
	textj.setFillColor(sf::Color::White);
	textj.setPosition(190, 430);
	textj.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	bool password = false;
	bool numpassword = false;

	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 95 && localposition.y <= 128) {
					active = 3;
					cout << "confirmation" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 133 && localposition.y <= 165) {
					active = 4;
					cout << "age" << endl;

				}
				else if (localposition.x >= 197 && localposition.x <= 350 && localposition.y >= 177 && localposition.y <= 199) {
					active = 5;
					textq.setFillColor(sf::Color::Red);
					textw.setFillColor(sf::Color::White);
					choice71.setOutlineColor(sf::Color::Red);
					choice72.setOutlineColor(sf::Color::White);
					cout << "male" << endl;
					gender = ("male");

				}
				else if (localposition.x >= 397 && localposition.x <= 551 && localposition.y >= 177 && localposition.y <= 200) {
					active = 5;
					textw.setFillColor(sf::Color::Red);
					textq.setFillColor(sf::Color::White);
					choice72.setOutlineColor(sf::Color::Red);
					choice71.setOutlineColor(sf::Color::White);
					cout << "female" << endl;
					gender = ("female");

				}
				else if (localposition.x >= 193 && localposition.x <= 355 && localposition.y >= 255 && localposition.y <= 283) {
					active = 6;
					cout << "city" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 753 && localposition.y >= 255 && localposition.y <= 283) {
					active = 7;
					cout << "country" << endl;

				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() == 0 || age.getSize() == 0 || name.getSize() == 0 || city.getSize() == 0 && country.getSize() == 0) {
					fill = true;
					password = false;
					numpassword = false;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() > 5 && pass == conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;


					regshop(window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (gender == ("male") || gender == ("female")) && age.getSize() > 0 && pass.getSize() > 5 && conf.getSize() > 5 && pass != conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					numpassword = false;
					fill = false;
					password = true;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() <= 5 || conf.getSize() <= 5 && (pass != conf || pass == conf) && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					password = false;
					numpassword = true;
					fill = false;
				}
				else

					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					passout.erase(passout.getSize() - 1, passout.getSize());
					textpass.setString(passout);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					conf += event.text.unicode;
					confout += "*";
					textconf.setString(confout);
				}
				else if (active == 3 && event.text.unicode == 8 && conf.getSize() > 0) {
					conf.erase(conf.getSize() - 1, conf.getSize());
					confout.erase(confout.getSize() - 1, confout.getSize());
					textconf.setString(confout);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 6 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 7 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textf);
			window.draw(textg);
			window.draw(textz);
			window.draw(text);
			window.draw(textw);
			window.draw(textq);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.draw(choice71);
			window.draw(choice72);
			window.draw(choice8);
			window.draw(textname);
			window.draw(textpass);
			window.draw(textconf);
			window.draw(textage);
			window.draw(textgend);
			window.draw(textcity);
			window.draw(textcountry);
			if (fill)
				window.draw(textk);
			if (password)
				window.draw(textj);
			if (numpassword)
				window.draw(textn);

			window.display();

		}
	}
}

void regshoper(sf::RenderWindow& window, sf::RectangleShape photo) {



	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::RectangleShape choice3(sf::Vector2f(550.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 100));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(7);

	sf::RectangleShape choice4(sf::Vector2f(550.0f, 20.0f));
	choice4.setPosition(sf::Vector2f(200, 140));
	choice4.setFillColor(sf::Color::White);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(7);

	sf::RectangleShape choice5(sf::Vector2f(150.0f, 20.0f));
	choice5.setPosition(sf::Vector2f(200, 260));
	choice5.setFillColor(sf::Color::White);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(7);

	sf::RectangleShape choice6(sf::Vector2f(150.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(600, 260));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(7);


	sf::RectangleShape choice71(sf::Vector2f(150.0f, 20.0f));
	choice71.setPosition(sf::Vector2f(200, 180));
	choice71.setFillColor(sf::Color::Transparent);
	choice71.setOutlineThickness(3);
	choice71.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice72(sf::Vector2f(150.0f, 20.0f));
	choice72.setPosition(sf::Vector2f(400, 180));
	choice72.setFillColor(sf::Color::Transparent);
	choice72.setOutlineThickness(3);
	choice72.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passout;
	sf::Text textpass(passout, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String confout;
	sf::Text textconf(confout, fontc, 25);
	textconf.setFillColor(sf::Color::Black);
	textconf.setPosition(200, 95);

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(200, 135);

	sf::Font fontgend;
	fontgend.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String gender;
	sf::Text textgend(gender, fontage, 25);
	textgend.setFillColor(sf::Color::Black);
	textgend.setPosition(200, 175);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 255);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 255);


	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Name             : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password     : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("C.Password :");
	textz.setCharacterSize(30);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(10, 90);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontl;
	fontl.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("Age                : ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 130);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Gender          : ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(10, 170);
	textd.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fonta);
	textq.setString("    Male ");
	textq.setCharacterSize(20);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(235, 177);
	textq.setStyle(sf::Text::Regular);

	sf::Font fontw;
	fontw.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textw;
	textw.setFont(fonta);
	textw.setString(" Female ");
	textw.setCharacterSize(20);
	textw.setFillColor(sf::Color::White);
	textw.setPosition(435, 177);
	textw.setStyle(sf::Text::Regular);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("Adress. ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(10, 210);
	texte.setStyle(sf::Text::Regular);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString("city                 :");
	textf.setCharacterSize(30);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(10, 250);
	textf.setStyle(sf::Text::Regular);

	sf::Font fontg;
	fontg.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textg;
	textg.setFont(fontg);
	textg.setString("Country           :");
	textg.setCharacterSize(30);
	textg.setFillColor(sf::Color::White);
	textg.setPosition(400, 250);
	textg.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("      Next   ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textid;
	textid.setFont(font);
	textid.setString("    Your ID Is : ");
	textid.setCharacterSize(40);
	textid.setFillColor(sf::Color::White);
	textid.setPosition(190, 430);
	textid.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontz);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(190, 430);
	textk.setStyle(sf::Text::Bold);

	sf::Font fontn;
	fontn.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontz);
	textn.setString("  ** Password Must Be At Least 6 Digits **  ");
	textn.setCharacterSize(28);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 430);
	textn.setStyle(sf::Text::Bold);

	sf::String pass;
	sf::String conf;


	sf::Font fontj;
	fontj.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textj;
	textj.setFont(fontz);
	textj.setString("  ** password Does Not Match ** ");
	textj.setCharacterSize(28);
	textj.setFillColor(sf::Color::White);
	textj.setPosition(190, 430);
	textj.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	bool password = false;
	bool numpassword = false;

	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 95 && localposition.y <= 128) {
					active = 3;
					cout << "confirmation" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 133 && localposition.y <= 165) {
					active = 4;
					cout << "age" << endl;

				}
				else if (localposition.x >= 197 && localposition.x <= 350 && localposition.y >= 177 && localposition.y <= 199) {
					active = 5;
					textw.setFillColor(sf::Color::White);
					textq.setFillColor(sf::Color::Red);
					choice72.setOutlineColor(sf::Color::White);
					choice71.setOutlineColor(sf::Color::Red);
					cout << "male" << endl;
					gender = ("male");

				}
				else if (localposition.x >= 397 && localposition.x <= 551 && localposition.y >= 177 && localposition.y <= 200) {
					active = 5;
					textw.setFillColor(sf::Color::Red);
					textq.setFillColor(sf::Color::White);
					choice72.setOutlineColor(sf::Color::Red);
					choice71.setOutlineColor(sf::Color::White);
					cout << "female" << endl;
					gender = ("female");

				}
				else if (localposition.x >= 193 && localposition.x <= 355 && localposition.y >= 255 && localposition.y <= 283) {
					active = 6;
					cout << "city" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 753 && localposition.y >= 255 && localposition.y <= 283) {
					active = 7;
					cout << "country" << endl;

				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() == 0 || age.getSize() == 0 || name.getSize() == 0 || city.getSize() == 0 && country.getSize() == 0) {
					fill = true;
					password = false;
					numpassword = false;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() > 5 && pass == conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;


					scchoice(window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (gender == ("male") || gender == ("female")) && age.getSize() > 0 && pass.getSize() > 5 && conf.getSize() > 5 && pass != conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					numpassword = false;
					fill = false;
					password = true;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() <= 5 || conf.getSize() <= 5 && (pass != conf || pass == conf) && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					password = false;
					numpassword = true;
					fill = false;
				}
				else

					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					passout.erase(passout.getSize() - 1, passout.getSize());
					textpass.setString(passout);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					conf += event.text.unicode;
					confout += "*";
					textconf.setString(confout);
				}
				else if (active == 3 && event.text.unicode == 8 && conf.getSize() > 0) {
					conf.erase(conf.getSize() - 1, conf.getSize());
					confout.erase(confout.getSize() - 1, confout.getSize());
					textconf.setString(confout);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 6 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 7 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textf);
			window.draw(textg);
			window.draw(textz);
			window.draw(text);
			window.draw(textw);
			window.draw(textq);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.draw(choice71);
			window.draw(choice72);
			window.draw(choice8);
			window.draw(textname);
			window.draw(textpass);
			window.draw(textconf);
			window.draw(textage);
			window.draw(textgend);
			window.draw(textcity);
			window.draw(textcountry);
			if (fill)
				window.draw(textk);
			if (password)
				window.draw(textj);
			if (numpassword)
				window.draw(textn);

			window.display();

		}
	}
}

void regshop(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(150.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(600, 115));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);


	sf::RectangleShape choice3(sf::Vector2f(150.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 115));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineThickness(7);
	choice3.setOutlineColor(sf::Color::White);


	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice10(sf::Vector2f(330.0f, 40.0f));
	choice10.setPosition(sf::Vector2f(30, 190));
	choice10.setFillColor(sf::Color::Transparent);
	choice10.setOutlineColor(sf::Color::White);
	choice10.setOutlineThickness(3);

	sf::RectangleShape choice20(sf::Vector2f(330.0f, 40.0f));
	choice20.setPosition(sf::Vector2f(30, 260));
	choice20.setFillColor(sf::Color::Transparent);
	choice20.setOutlineColor(sf::Color::White);
	choice20.setOutlineThickness(3);

	sf::RectangleShape choice30(sf::Vector2f(330.0f, 40.0f));
	choice30.setPosition(sf::Vector2f(30, 330));
	choice30.setFillColor(sf::Color::Transparent);
	choice30.setOutlineColor(sf::Color::White);
	choice30.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(330.0f, 40.0f));
	choice40.setPosition(sf::Vector2f(30, 400));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::White);
	choice40.setOutlineThickness(3);

	sf::RectangleShape choice50(sf::Vector2f(330.0f, 40.0f));
	choice50.setPosition(sf::Vector2f(30, 470));
	choice50.setFillColor(sf::Color::Transparent);
	choice50.setOutlineColor(sf::Color::White);
	choice50.setOutlineThickness(3);

	sf::RectangleShape choice60(sf::Vector2f(330.0f, 40.0f));
	choice60.setPosition(sf::Vector2f(30, 540));
	choice60.setFillColor(sf::Color::Transparent);
	choice60.setOutlineColor(sf::Color::White);
	choice60.setOutlineThickness(3);

	sf::RectangleShape choice70(sf::Vector2f(330.0f, 40.0f));
	choice70.setPosition(sf::Vector2f(30, 610));
	choice70.setFillColor(sf::Color::Transparent);
	choice70.setOutlineColor(sf::Color::White);
	choice70.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Phones & Tablets ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(50, 188);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("      Electronics ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(60, 258);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" Makeup & Accessories ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(30, 328);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("        Clothing ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(60, 398);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("       Shoes & Bags ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(58, 468);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font5);
	text6.setString("         Books ");
	text6.setCharacterSize(30);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(62, 538);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font5);
	text7.setString("         Gaming ");
	text7.setCharacterSize(30);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(60, 608);
	text7.setStyle(sf::Text::Bold);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 107);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 110);

	sf::String category;

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Shop Name  : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Shop Adress. ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 60);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("city                 :");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 105);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Country           :");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(400, 105);
	textd.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("    Register ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontk);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(390, 400);
	textk.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 758 && localposition.y >= 95 && localposition.y <= 140) {
					active = 2;
					cout << "country" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 360 && localposition.y >= 95 && localposition.y <= 140) {
					active = 3;
					cout << "city" << endl;

				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 189 && localposition.y <= 227) {
					category = ("Phones & Tablets");
					cout << "phones & tablets" << endl;
					choice10.setOutlineColor(sf::Color::Red);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::Red);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 259 && localposition.y <= 295) {
					category = ("Electronics");
					cout << "electronics" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::Red);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::Red);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 327 && localposition.y <= 370) {
					category = ("Makeup & Accessories");
					cout << "makeup & accessories" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::Red);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::Red);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 399 && localposition.y <= 439) {
					category = ("Clothing");
					cout << "clothing" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::Red);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::Red);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 469 && localposition.y <= 505) {
					category = ("Shoes & Bags");
					cout << "shoes & bags" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::Red);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::Red);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 541 && localposition.y <= 575) {
					category = ("Books");
					cout << "books" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::Red);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::Red);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 607 && localposition.y <= 649) {
					category = ("Gaming");
					cout << "gaming" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::Red);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::Red);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					homepageOwner(window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (name.getSize() > 0 || city.getSize() == 0 || country.getSize() == 0))
				{
					fill = true;
				}
				else

					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 3 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 2 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(text);
			if (fill)
				window.draw(textk);
			window.draw(choice8);
			window.draw(choice1);
			window.draw(choice10);
			window.draw(choice20);
			window.draw(choice30);
			window.draw(choice40);
			window.draw(choice40);
			window.draw(choice50);
			window.draw(choice60);
			window.draw(choice70);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(textname);
			window.draw(text1);
			window.draw(text2);
			window.draw(text3);
			window.draw(text4);
			window.draw(text5);
			window.draw(text6);

			window.draw(text7);
			window.draw(textcity);
			window.draw(textcountry);

			window.display();

		}
	}

}

void prodchoice(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 60.0f));
	choice1.setPosition(sf::Vector2f(250, 50));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice2(sf::Vector2f(320.0f, 60.0f));
	choice2.setPosition(sf::Vector2f(250, 175));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineThickness(5);
	choice2.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice3(sf::Vector2f(320.0f, 60.0f));
	choice3.setPosition(sf::Vector2f(250, 300));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineThickness(5);
	choice3.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice4(sf::Vector2f(320.0f, 60.0f));
	choice4.setPosition(sf::Vector2f(250, 425));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineThickness(5);
	choice4.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 60.0f));
	choice5.setPosition(sf::Vector2f(250, 550));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice6(sf::Vector2f(100.0f, 22.0f));
	choice6.setPosition(sf::Vector2f(685, 20));
	choice6.setFillColor(sf::Color::Transparent);
	choice6.setOutlineColor(sf::Color::Red);
	choice6.setOutlineThickness(3);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" ADD PRODUCT ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(289, 60);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("  REMOVE PRODUCT ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(272, 185);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("EDIT PRODUCT ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(300, 310);
	textc.setStyle(sf::Text::Bold);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("   VIEW YOUR PRODUCTS ");
	textd.setCharacterSize(29);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(226, 435);
	textd.setStyle(sf::Text::Bold);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("   DISCOUNT PRODUCT  ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(240, 560);
	texte.setStyle(sf::Text::Bold);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Back ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 44 && localposition.y <= 114) {
					cout << "add" << endl;
					addproduct(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 168 && localposition.y <= 238) {
					cout << "remove" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 295 && localposition.y <= 363) {
					cout << "edit" << endl;
					editprod(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 421 && localposition.y <= 487) {
					cout << "view" << endl;
					viewproductsOwner(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 544 && localposition.y <= 611) {
					cout << "discount" << endl;
					discount(window, photo);

				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 17 && localposition.y <= 43) {
					homepageOwner(window, photo);
				}

			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(text0);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.display();
		}
	}


}

void loginshopper(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("ID                   : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password    : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontd);
	textn.setString("     login ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String id;
	sf::Text textid(id, fontid, 25);
	textid.setFillColor(sf::Color::Black);
	textid.setPosition(200, 14);

	sf::String passout;


	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String pass;
	sf::Text textpass(pass, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);
	int active;
	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;

				}
				else if (localposition.x >= 145 && localposition.x <= 354 && localposition.y >= 485 && localposition.y <= 570 && pass.getSize() > 5 && id.getSize() > 0) {
					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;

					scchoice(window, photo);
				}
				else
					active = 0;
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					id += event.text.unicode;
					textid.setString(id);
				}
				else if (active == 1 && event.text.unicode == 8 && id.getSize() > 0)
				{
					id.erase(id.getSize() - 1, id.getSize());
					textid.setString(id);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					passout.erase(passout.getSize() - 1, passout.getSize());
					pass.erase(pass.getSize() - 1, pass.getSize());
					textpass.setString(passout);
				}

			}
		}
		window.clear();
		window.draw(photo);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(texta);
		window.draw(textb);
		window.draw(textn);
		window.draw(textpass);
		window.draw(textid);
		window.draw(choice);
		window.display();

	}


}

void scchoice(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice0(sf::Vector2f(110.0f, 25.0f));
	choice0.setPosition(sf::Vector2f(770, 15));
	choice0.setFillColor(sf::Color::Transparent);
	choice0.setOutlineThickness(3);
	choice0.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice01(sf::Vector2f(110.0f, 25.0f));
	choice01.setPosition(sf::Vector2f(770, 50));
	choice01.setFillColor(sf::Color::Transparent);
	choice01.setOutlineThickness(3);
	choice01.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 80.0f));
	choice1.setPosition(sf::Vector2f(250, 100));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice2(sf::Vector2f(320.0f, 80.0f));
	choice2.setPosition(sf::Vector2f(250, 225));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineThickness(5);
	choice2.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice3(sf::Vector2f(320.0f, 80.0f));
	choice3.setPosition(sf::Vector2f(250, 350));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineThickness(5);
	choice3.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice4(sf::Vector2f(320.0f, 80.0f));
	choice4.setPosition(sf::Vector2f(250, 475));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineThickness(5);
	choice4.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 80.0f));
	choice5.setPosition(sf::Vector2f(250, 600));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString(" VIEW CART ");
	textz.setCharacterSize(20);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(770, 15);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fontq);
	textq.setString("   LOG OUT ");
	textq.setCharacterSize(20);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(770, 50);
	textq.setStyle(sf::Text::Regular);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" VIEW PRODUCTS ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(283, 118);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" SEARCH ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(333, 243);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString(" EDIT INFORMATION ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(270, 368);
	textc.setStyle(sf::Text::Bold);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString(" PARCHASE HISTORY ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(255, 494);
	textd.setStyle(sf::Text::Bold);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString(" DELETE ACCOUNT  ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(280, 618);
	texte.setStyle(sf::Text::Bold);


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 93 && localposition.y <= 177) {
					cout << "view" << endl;
					prodmenu(window, photo);

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 221 && localposition.y <= 302) {
					cout << "srearch" << endl;
					search(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 345 && localposition.y <= 428) {
					cout << "edit" << endl;
					editshoper(window, photo);

				}
				else if (localposition.x >= 767 && localposition.x <= 883 && localposition.y >= 10 && localposition.y <= 41) {
					cout << "cart" << endl;
					cart(window, photo);

				}
				else if (localposition.x >= 767 && localposition.x <= 883 && localposition.y >= 45 && localposition.y <= 77) {
					cout << "logout" << endl;
					welcome(window, photo);

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 470 && localposition.y <= 553) {
					cout << "parchase" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 593 && localposition.y <= 680) {
					cout << "delete" << endl;
					deleteshopper(window, photo);
				}


			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textz);
			window.draw(textq);
			window.draw(choice0);
			window.draw(choice01);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.display();
		}
	}
}

void search(sf::RenderWindow& window, sf::RectangleShape photo) {



	sf::RectangleShape choice1(sf::Vector2f(330.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(300, 25));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choices(sf::Vector2f(86.0f, 25.0f));
	choices.setPosition(sf::Vector2f(695, 23));
	choices.setFillColor(sf::Color::Transparent);
	choices.setOutlineColor(sf::Color::Red);
	choices.setOutlineThickness(4);

	sf::RectangleShape choiceb(sf::Vector2f(86.0f, 25.0f));
	choiceb.setPosition(sf::Vector2f(695, 700));
	choiceb.setFillColor(sf::Color::Transparent);
	choiceb.setOutlineColor(sf::Color::Red);
	choiceb.setOutlineThickness(4);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" Search ");
	textb.setCharacterSize(20);
	textb.setFillColor(sf::Color::Red);
	textb.setPosition(696, 23);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontr;
	fontr.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textr;
	textr.setFont(fontr);
	textr.setString("   back ");
	textr.setCharacterSize(20);
	textr.setFillColor(sf::Color::Red);
	textr.setPosition(696, 700);
	textr.setStyle(sf::Text::Bold);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" Enter Product Name   : ");
	texta.setCharacterSize(20);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(30, 20);
	texta.setStyle(sf::Text::Bold);

	sf::Font fonto;
	fonto.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texto;
	texto.setFont(fonto);
	texto.setString(" Out Of Stock  ");
	texto.setCharacterSize(30);
	texto.setFillColor(sf::Color::White);
	texto.setPosition(350, 100);
	texto.setStyle(sf::Text::Bold);

	sf::Font fonts;
	fonts.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String searchh;
	sf::Text texts(searchh, fonts, 25);
	texts.setFillColor(sf::Color::Black);
	texts.setPosition(310, 20);

	int active = 0;
	bool found = false;

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 293 && localposition.x <= 638 && localposition.y >= 16 && localposition.y <= 52) {
					active = 1;
					cout << "search " << endl;

				}
				else if (localposition.x >= 691 && localposition.x <= 783 && localposition.y >= 19 && localposition.y <= 48) {
					//feh for loop bt3rd
					cout << "search " << endl;

				}
				else if (localposition.x >= 690 && localposition.x <= 783 && localposition.y >= 696 && localposition.y <= 728) {
					scchoice(window, photo);
					cout << "back" << endl;

				}
				else
				{
					active = 0;
				}
			}
			if (event.type == sf::Event::TextEntered) {
				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					searchh += event.text.unicode;
					texts.setString(searchh);

				}
				else if (active == 1 && event.text.unicode == 8 && searchh.getSize() > 0) {
					searchh.erase(searchh.getSize() - 1, searchh.getSize());
					texts.setString(searchh);
				}

			}


		}
		window.clear();
		window.draw(photo);
		window.draw(texta);
		window.draw(textr);
		window.draw(choice1);
		window.draw(texts);
		window.draw(choices);
		window.draw(choiceb);
		window.draw(textb);
		if (found)
			window.draw(texto);
		window.display();

	}


}

void loginowner(sf::RenderWindow& window, sf::RectangleShape photo) {



	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("ID                   : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password    : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontd);
	textn.setString("     login ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String id;
	sf::Text textid(id, fontid, 25);
	textid.setFillColor(sf::Color::Black);
	textid.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String pass;
	sf::Text textpass(pass, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);
	int active;
	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);

				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;

				}
				else if (localposition.x >= 145 && localposition.x <= 354 && localposition.y >= 485 && localposition.y <= 570 && pass.getSize() > 5 && id.getSize() > 0)
					prodchoice(window, photo);
				else
					active = 0;
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					id += event.text.unicode;
					textid.setString(id);
				}
				else if (active == 1 && event.text.unicode == 8 && id.getSize() > 0)
				{
					id.erase(id.getSize() - 1, id.getSize());
					textid.setString(id);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += "*";
					textpass.setString(pass);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					textpass.setString(pass);
				}

			}
		}
		window.clear();
		window.draw(photo);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(texta);
		window.draw(textb);
		window.draw(textn);
		window.draw(textpass);
		window.draw(textid);
		window.draw(choice);
		window.display();

	}



}

void ownerchoice(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("     login ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString("Registration ");
	textn.setCharacterSize(35);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				textn.setFillColor(sf::Color::White);
				text.setFillColor(sf::Color::White);
				choicee.setOutlineColor(sf::Color::White);
				choice.setOutlineColor(sf::Color::White);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					regowner(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					loginowner(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}



}

void shopperchoice(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("     login ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString("Registration ");
	textn.setCharacterSize(35);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				textn.setFillColor(sf::Color::White);
				text.setFillColor(sf::Color::White);
				choicee.setOutlineColor(sf::Color::White);
				choice.setOutlineColor(sf::Color::White);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					regshoper(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					loginshopper(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}

}

void editshoper(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choiceback(sf::Vector2f(80.0f, 22.0f));
	choiceback.setPosition(sf::Vector2f(700, 50));
	choiceback.setFillColor(sf::Color::Transparent);
	choiceback.setOutlineColor(sf::Color::Red);
	choiceback.setOutlineThickness(3);

	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 40.0f));
	choice3.setPosition(sf::Vector2f(250, 310));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
	choice4.setPosition(sf::Vector2f(250, 460));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(330.0f, 40.0f));
	choice5.setPosition(sf::Vector2f(250, 610));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
	choicem.setPosition(sf::Vector2f(160, 380));
	choicem.setFillColor(sf::Color::Transparent);
	choicem.setOutlineColor(sf::Color::White);
	choicem.setOutlineThickness(3);

	sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
	choicef.setPosition(sf::Vector2f(515, 380));
	choicef.setFillColor(sf::Color::Transparent);
	choicef.setOutlineColor(sf::Color::White);
	choicef.setOutlineThickness(3);

	sf::RectangleShape choicenpass(sf::Vector2f(330.0f, 22.0f));
	choicenpass.setPosition(sf::Vector2f(250, 220));
	choicenpass.setFillColor(sf::Color::White);
	choicenpass.setOutlineColor(sf::Color::White);
	choicenpass.setOutlineThickness(3);

	sf::RectangleShape choiceopass(sf::Vector2f(330.0f, 22.0f));
	choiceopass.setPosition(sf::Vector2f(250, 260));
	choiceopass.setFillColor(sf::Color::White);
	choiceopass.setOutlineColor(sf::Color::White);
	choiceopass.setOutlineThickness(3);

	sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
	choiceocpass.setPosition(sf::Vector2f(250, 182));
	choiceocpass.setFillColor(sf::Color::White);
	choiceocpass.setOutlineColor(sf::Color::White);
	choiceocpass.setOutlineThickness(3);

	sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
	choiceage.setPosition(sf::Vector2f(170, 535));
	choiceage.setFillColor(sf::Color::White);
	choiceage.setOutlineColor(sf::Color::White);
	choiceage.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 680));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 720));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(80.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(700, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);


	sf::String sname;
	sf::String spass;
	sf::String sgender;
	sf::String sage;
	sf::String scity;
	sf::String scountry;

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(174, 530);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(age, fontage, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontpasso;
	fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passo;
	sf::Text textpasso(age, fontage, 30);
	textpasso.setFillColor(sf::Color::Black);
	textpasso.setPosition(250, 215);

	sf::Font fontpasson;
	fontpasson.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passon;
	sf::Text textpasson(age, fontage, 30);
	textpasson.setFillColor(sf::Color::Black);
	textpasson.setPosition(250, 255);

	sf::Font fontpassonc;
	fontpassonc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passonc;
	sf::Text textpassonc(age, fontage, 30);
	textpassonc.setFillColor(sf::Color::Black);
	textpassonc.setPosition(250, 177);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(age, fontage, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(155, 715);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(age, fontage, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(155, 675);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font01;
	font01.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text01;
	text01.setFont(font01);
	text01.setString(" Back");
	text01.setCharacterSize(22);
	text01.setFillColor(sf::Color::Red);
	text01.setPosition(707, 46);
	text01.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("Edit Password ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString("Edit Gender ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(325, 310);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("Edit  Age ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(330, 460);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  Edit Address ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(320, 610);
	text5.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Old Password   :");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 172);
	text30.setStyle(sf::Text::Bold);

	sf::Font font31;
	font31.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text31;
	text31.setFont(font31);
	text31.setString(" New Password :");
	text31.setCharacterSize(30);
	text31.setFillColor(sf::Color::White);
	text31.setPosition(10, 210);
	text31.setStyle(sf::Text::Bold);

	sf::Font font32;
	font32.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text32;
	text32.setFont(font31);
	text32.setString("C.New Password:");
	text32.setCharacterSize(30);
	text32.setFillColor(sf::Color::White);
	text32.setPosition(10, 250);
	text32.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString("    Male ");
	text40.setCharacterSize(40);
	text40.setFillColor(sf::Color::White);
	text40.setPosition(160, 380);
	text40.setStyle(sf::Text::Regular);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Female ");
	text41.setCharacterSize(40);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(530, 380);
	text41.setStyle(sf::Text::Regular);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" New Age : ");
	text50.setCharacterSize(30);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(10, 525);
	text50.setStyle(sf::Text::Bold);

	sf::Font font70;
	font70.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text70;
	text70.setFont(font50);
	text70.setString(" City       : ");
	text70.setCharacterSize(30);
	text70.setFillColor(sf::Color::White);
	text70.setPosition(10, 710);
	text70.setStyle(sf::Text::Bold);

	sf::Font font60;
	font60.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text60;
	text60.setFont(font50);
	text60.setString(" Country : ");
	text60.setCharacterSize(30);
	text60.setFillColor(sf::Color::White);
	text60.setPosition(10, 670);
	text60.setStyle(sf::Text::Bold);

	bool bname = false;
	bool bpass = false;
	bool bgender = false;
	bool bage = false;
	bool badress = false;
	int active = 0;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				else if (localposition.x >= 697 && localposition.x <= 781 && localposition.y >= 16 && localposition.y <= 43 && (name.getSize() > 0 || (age.getSize() > 0 || passo.getSize() > 5 || passon.getSize() > 5 && passon == passonc) || passonc.getSize() > 0 || country.getSize() > 0 || city.getSize() > 0)) {
					scchoice(window, photo);
				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit password" << endl;

					bpass = true;
				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 216 && localposition.y <= 239 && bpass) {
					cout << "new" << endl;
					active = 2;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
					cout << "old" << endl;
					active = 7;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 256 && localposition.y <= 281 && bpass) {
					cout << "confrmation" << endl;
					active = 3;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 309 && localposition.y <= 351) {

					cout << "edit gender" << endl;

					bgender = true;
				}
				else if (localposition.x >= 155 && localposition.x <= 330 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "male" << endl;
					choicef.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::White);
					choicem.setOutlineColor(sf::Color::Red);
					text40.setFillColor(sf::Color::Red);
					sgender = ("Male");
				}
				else if (localposition.x >= 510 && localposition.x <= 686 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "female" << endl;
					choicef.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::Red);
					choicem.setOutlineColor(sf::Color::White);
					text40.setFillColor(sf::Color::White);
					sgender = ("Female");

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 458 && localposition.y <= 500) {
					cout << "edit age" << endl;
					bage = true;

				}
				else if (localposition.x >= 696 && localposition.x <= 781 && localposition.y >= 47 && localposition.y <= 72) {
					cout << "back" << endl;
					scchoice(window, photo);

				}
				else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558 && bage) {
					cout << "age" << endl;
					active = 4;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 606 && localposition.y <= 651) {
					cout << "edit address" << endl;
					badress = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 677 && localposition.y <= 703 && badress) {
					cout << "city" << endl;
					active = 5;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 714 && localposition.y <= 743 && badress) {
					cout << "country" << endl;
					active = 6;
					cout << active;
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					passo += "*";
					textpasso.setString(passo);

				}
				else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
					passo.erase(passo.getSize() - 1, passo.getSize());
					textpasso.setString(passo);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passon += "*";
					textpasson.setString(passon);
				}
				else if (active == 3 && event.text.unicode == 8 && passon.getSize() > 0) {
					passon.erase(passon.getSize() - 1, passon.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpasson.setString(passon);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 5 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 5 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}

				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 6 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passonc += "*";
					textpassonc.setString(passonc);
				}
				else if (active == 7 && event.text.unicode == 8 && passonc.getSize() > 0) {
					passonc.erase(passonc.getSize() - 1, passonc.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpassonc.setString(passonc);
				}


			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text4);
		window.draw(text5);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(text0);
		window.draw(text01);
		window.draw(choicesave);
		window.draw(choiceback);

		if (bgender) {
			window.draw(choicef);
			window.draw(text40);
			window.draw(text41);
			window.draw(choicem);
		}
		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (bpass) {

			window.draw(text30);
			window.draw(text31);
			window.draw(text32);
			window.draw(choicenpass);
			window.draw(choiceopass);
			window.draw(choiceocpass);
			window.draw(textpassonc);
			window.draw(textpasso);
			window.draw(textpasson);
		}
		if (bage) {
			window.draw(text50);
			window.draw(choiceage);
			window.draw(textage);
		}
		if (badress) {

			window.draw(text60);
			window.draw(text70);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

		}
		window.display();
	}


}

void editowner(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 40.0f));
	choice3.setPosition(sf::Vector2f(250, 310));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
	choice4.setPosition(sf::Vector2f(250, 460));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(330.0f, 40.0f));
	choice5.setPosition(sf::Vector2f(250, 610));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
	choicem.setPosition(sf::Vector2f(160, 380));
	choicem.setFillColor(sf::Color::Transparent);
	choicem.setOutlineColor(sf::Color::White);
	choicem.setOutlineThickness(3);

	sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
	choicef.setPosition(sf::Vector2f(515, 380));
	choicef.setFillColor(sf::Color::Transparent);
	choicef.setOutlineColor(sf::Color::White);
	choicef.setOutlineThickness(3);

	sf::RectangleShape choicenpass(sf::Vector2f(330.0f, 22.0f));
	choicenpass.setPosition(sf::Vector2f(250, 220));
	choicenpass.setFillColor(sf::Color::White);
	choicenpass.setOutlineColor(sf::Color::White);
	choicenpass.setOutlineThickness(3);

	sf::RectangleShape choiceopass(sf::Vector2f(330.0f, 22.0f));
	choiceopass.setPosition(sf::Vector2f(250, 260));
	choiceopass.setFillColor(sf::Color::White);
	choiceopass.setOutlineColor(sf::Color::White);
	choiceopass.setOutlineThickness(3);

	sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
	choiceocpass.setPosition(sf::Vector2f(250, 182));
	choiceocpass.setFillColor(sf::Color::White);
	choiceocpass.setOutlineColor(sf::Color::White);
	choiceocpass.setOutlineThickness(3);

	sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
	choiceage.setPosition(sf::Vector2f(170, 535));
	choiceage.setFillColor(sf::Color::White);
	choiceage.setOutlineColor(sf::Color::White);
	choiceage.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 680));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 720));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(100.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(685, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);

	sf::RectangleShape choiceshop(sf::Vector2f(100.0f, 22.0f));
	choiceshop.setPosition(sf::Vector2f(685, 50));
	choiceshop.setFillColor(sf::Color::Transparent);
	choiceshop.setOutlineColor(sf::Color::Red);
	choiceshop.setOutlineThickness(3);

	sf::String sname;
	sf::String spass;
	sf::String sgender;
	sf::String sage;
	sf::String scity;
	sf::String scountry;

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(174, 530);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(age, fontage, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontpasso;
	fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passo;
	sf::Text textpasso(age, fontage, 30);
	textpasso.setFillColor(sf::Color::Black);
	textpasso.setPosition(250, 215);

	sf::Font fontpasson;
	fontpasson.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passon;
	sf::Text textpasson(age, fontage, 30);
	textpasson.setFillColor(sf::Color::Black);
	textpasson.setPosition(250, 255);

	sf::Font fontpassonc;
	fontpassonc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passonc;
	sf::Text textpassonc(age, fontage, 30);
	textpassonc.setFillColor(sf::Color::Black);
	textpassonc.setPosition(250, 177);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(age, fontage, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(155, 715);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(age, fontage, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(155, 675);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font01;
	font01.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text01;
	text01.setFont(font01);
	text01.setString("Shop Data");
	text01.setCharacterSize(19);
	text01.setFillColor(sf::Color::Red);
	text01.setPosition(690, 48);
	text01.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("Edit Password ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString("Edit Gender ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(325, 310);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("Edit  Age ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(330, 460);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  Edit Address ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(320, 610);
	text5.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Old Password   :");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 172);
	text30.setStyle(sf::Text::Bold);

	sf::Font font31;
	font31.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text31;
	text31.setFont(font31);
	text31.setString(" New Password :");
	text31.setCharacterSize(30);
	text31.setFillColor(sf::Color::White);
	text31.setPosition(10, 210);
	text31.setStyle(sf::Text::Bold);

	sf::Font font32;
	font32.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text32;
	text32.setFont(font31);
	text32.setString("C.New Password:");
	text32.setCharacterSize(30);
	text32.setFillColor(sf::Color::White);
	text32.setPosition(10, 250);
	text32.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString("    Male ");
	text40.setCharacterSize(40);
	text40.setFillColor(sf::Color::White);
	text40.setPosition(160, 380);
	text40.setStyle(sf::Text::Regular);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Female ");
	text41.setCharacterSize(40);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(530, 380);
	text41.setStyle(sf::Text::Regular);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" New Age : ");
	text50.setCharacterSize(30);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(10, 525);
	text50.setStyle(sf::Text::Bold);

	sf::Font font70;
	font70.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text70;
	text70.setFont(font50);
	text70.setString(" City       : ");
	text70.setCharacterSize(30);
	text70.setFillColor(sf::Color::White);
	text70.setPosition(10, 710);
	text70.setStyle(sf::Text::Bold);

	sf::Font font60;
	font60.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text60;
	text60.setFont(font50);
	text60.setString(" Country : ");
	text60.setCharacterSize(30);
	text60.setFillColor(sf::Color::White);
	text60.setPosition(10, 670);
	text60.setStyle(sf::Text::Bold);

	bool bname = false;
	bool bpass = false;
	bool bgender = false;
	bool bage = false;
	bool badress = false;
	int active = 0;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 48 && localposition.y <= 73) {
					editshop(window, photo);
				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 17 && localposition.y <= 43) {
					homepageOwner(window, photo);
				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit password" << endl;

					bpass = true;
				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 216 && localposition.y <= 239 && bpass) {
					cout << "new" << endl;
					active = 2;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
					cout << "old" << endl;
					active = 7;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 256 && localposition.y <= 281 && bpass) {
					cout << "confrmation" << endl;
					active = 3;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 309 && localposition.y <= 351) {
					cout << "edit gender" << endl;

					bgender = true;
				}
				else if (localposition.x >= 155 && localposition.x <= 330 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "male" << endl;
					choicem.setOutlineColor(sf::Color::Red);
					text40.setFillColor(sf::Color::Red);
					choicef.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::White);
					sgender = ("Male");
				}
				else if (localposition.x >= 510 && localposition.x <= 686 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "female" << endl;
					choicef.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::Red);
					choicem.setOutlineColor(sf::Color::White);
					text40.setFillColor(sf::Color::White);
					sgender = ("Female");

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 458 && localposition.y <= 500) {
					cout << "edit age" << endl;
					bage = true;

				}
				else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558 && bage) {
					cout << "age" << endl;
					active = 4;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 606 && localposition.y <= 651) {
					cout << "edit address" << endl;
					badress = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 677 && localposition.y <= 703 && badress) {
					cout << "city" << endl;
					active = 5;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 714 && localposition.y <= 743 && badress) {
					cout << "country" << endl;
					active = 6;
					cout << active;
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					passo += "*";
					textpasso.setString(passo);

				}
				else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
					passo.erase(passo.getSize() - 1, passo.getSize());
					textpasso.setString(passo);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passon += "*";
					textpasson.setString(passon);
				}
				else if (active == 3 && event.text.unicode == 8 && passon.getSize() > 0) {
					passon.erase(passon.getSize() - 1, passon.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpasson.setString(passon);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 5 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 5 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}

				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 6 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passonc += "*";
					textpassonc.setString(passonc);
				}
				else if (active == 7 && event.text.unicode == 8 && passonc.getSize() > 0) {
					passonc.erase(passonc.getSize() - 1, passonc.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpassonc.setString(passonc);
				}


			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text4);
		window.draw(text5);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(text0);
		window.draw(choicesave);
		window.draw(text01);
		window.draw(choiceshop);
		if (bgender) {
			window.draw(choicef);
			window.draw(text40);
			window.draw(text41);
			window.draw(choicem);
		}
		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (bpass) {

			window.draw(text30);
			window.draw(text31);
			window.draw(text32);
			window.draw(choicenpass);
			window.draw(choiceopass);
			window.draw(choiceocpass);
			window.draw(textpassonc);
			window.draw(textpasso);
			window.draw(textpasson);
		}
		if (bage) {
			window.draw(text50);
			window.draw(choiceage);
			window.draw(textage);
		}
		if (badress) {

			window.draw(text60);
			window.draw(text70);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

		}
		window.display();
	}


}

void editshop(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(80.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(700, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);

	sf::RectangleShape choiceback(sf::Vector2f(80.0f, 22.0f));
	choiceback.setPosition(sf::Vector2f(700, 50));
	choiceback.setFillColor(sf::Color::Transparent);
	choiceback.setOutlineColor(sf::Color::Red);
	choiceback.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicecat(sf::Vector2f(330.0f, 40.0f));
	choicecat.setPosition(sf::Vector2f(250, 280));
	choicecat.setFillColor(sf::Color::Transparent);
	choicecat.setOutlineColor(sf::Color::White);
	choicecat.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 190));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 230));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choice10(sf::Vector2f(330.0f, 40.0f));
	choice10.setPosition(sf::Vector2f(400, 400));
	choice10.setFillColor(sf::Color::Transparent);
	choice10.setOutlineColor(sf::Color::White);
	choice10.setOutlineThickness(3);

	sf::RectangleShape choice20(sf::Vector2f(330.0f, 40.0f));
	choice20.setPosition(sf::Vector2f(400, 470));
	choice20.setFillColor(sf::Color::Transparent);
	choice20.setOutlineColor(sf::Color::White);
	choice20.setOutlineThickness(3);

	sf::RectangleShape choice30(sf::Vector2f(330.0f, 40.0f));
	choice30.setPosition(sf::Vector2f(400, 540));
	choice30.setFillColor(sf::Color::Transparent);
	choice30.setOutlineColor(sf::Color::White);
	choice30.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(330.0f, 40.0f));
	choice40.setPosition(sf::Vector2f(30, 400));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::White);
	choice40.setOutlineThickness(3);

	sf::RectangleShape choice50(sf::Vector2f(330.0f, 40.0f));
	choice50.setPosition(sf::Vector2f(30, 470));
	choice50.setFillColor(sf::Color::Transparent);
	choice50.setOutlineColor(sf::Color::White);
	choice50.setOutlineThickness(3);

	sf::RectangleShape choice60(sf::Vector2f(330.0f, 40.0f));
	choice60.setPosition(sf::Vector2f(30, 540));
	choice60.setFillColor(sf::Color::Transparent);
	choice60.setOutlineColor(sf::Color::White);
	choice60.setOutlineThickness(3);

	sf::RectangleShape choice70(sf::Vector2f(330.0f, 40.0f));
	choice70.setPosition(sf::Vector2f(30, 610));
	choice70.setFillColor(sf::Color::Transparent);
	choice70.setOutlineColor(sf::Color::White);
	choice70.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Phones & Tablets ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(420, 398);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("      Electronics ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(420, 468);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" Makeup & Accessories ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(400, 538);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("        Clothing ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(60, 398);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("       Shoes & Bags ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(58, 468);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font5);
	text6.setString("         Books ");
	text6.setCharacterSize(30);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(62, 538);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font5);
	text7.setString("         Gaming ");
	text7.setCharacterSize(30);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(60, 608);
	text7.setStyle(sf::Text::Bold);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(150, 185);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(150, 225);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font00;
	font00.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text00;
	text00.setFont(font0);
	text00.setString(" Back ");
	text00.setCharacterSize(22);
	text00.setFillColor(sf::Color::Red);
	text00.setPosition(707, 46);
	text00.setStyle(sf::Text::Bold);

	sf::Font font03;
	font03.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text03;
	text03.setFont(font0);
	text03.setString(" Edit Category ");
	text03.setCharacterSize(30);
	text03.setFillColor(sf::Color::White);
	text03.setPosition(320, 280);
	text03.setStyle(sf::Text::Bold);

	sf::Font font01;
	font01.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text01;
	text01.setFont(font01);
	text01.setString(" Edit Name ");
	text01.setCharacterSize(30);
	text01.setFillColor(sf::Color::White);
	text01.setPosition(325, 10);
	text01.setStyle(sf::Text::Bold);

	sf::Font font02;
	font02.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text02;
	text02.setFont(font02);
	text02.setString("  Edit Address ");
	text02.setCharacterSize(30);
	text02.setFillColor(sf::Color::White);
	text02.setPosition(305, 130);
	text02.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font20;
	font20.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text20;
	text20.setFont(font20);
	text20.setString(" City       : ");
	text20.setCharacterSize(30);
	text20.setFillColor(sf::Color::White);
	text20.setPosition(10, 220);
	text20.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Country : ");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 180);
	text30.setStyle(sf::Text::Bold);

	bool badress = false;
	bool bname = false;
	bool cate = false;
	int active = 0;
	sf::String category;

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				else if (localposition.x >= 698 && localposition.x <= 783 && localposition.y >= 47 && localposition.y <= 75) {
					cout << "back" << endl;
					prodchoice(window, photo);

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit address" << endl;

					badress = true;
				}
				else if (localposition.x >= 248 && localposition.x <= 581 && localposition.y >= 273 && localposition.y <= 320) {
					cout << "edit category" << endl;

					cate = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 225 && localposition.y <= 253 && badress) {
					cout << "city" << endl;
					active = 3;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 186 && localposition.y <= 213 && badress) {
					cout << "country" << endl;
					active = 2;
					cout << active;
				}
				else if (localposition.x >= 697 && localposition.x <= 781 && localposition.y >= 16 && localposition.y <= 43) {
					homepageOwner(window, photo);
				}
				else if (localposition.x >= 397 && localposition.x <= 731 && localposition.y >= 398 && localposition.y <= 439) {
					category = ("Phones & Tablets");
					cout << "phones & tablets" << endl;
					choice10.setOutlineColor(sf::Color::Red);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::Red);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 396 && localposition.x <= 731 && localposition.y >= 468 && localposition.y <= 512) {
					category = ("Electronics");
					cout << "electronics" << endl;

					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::Red);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::Red);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 397 && localposition.x <= 734 && localposition.y >= 538 && localposition.y <= 581) {
					category = ("Makeup & Accessories");
					cout << "makeup & accessories" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::Red);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::Red);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 399 && localposition.y <= 439) {
					category = ("Clothing");
					cout << "clothing" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::Red);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::Red);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 469 && localposition.y <= 505) {
					category = ("Shoes & Bags");
					cout << "shoes & bags" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::Red);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::Red);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 541 && localposition.y <= 575) {
					category = ("Books");
					cout << "books" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::Red);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::Red);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 607 && localposition.y <= 649) {
					category = ("Gaming");
					cout << "gaming" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::Red);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::Red);
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 2 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 3 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}


			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text01);
		window.draw(text00);
		window.draw(text02);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choicesave);
		window.draw(choiceback);
		window.draw(text0);
		window.draw(text03);
		window.draw(choicecat);


		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (badress) {

			window.draw(text30);
			window.draw(text20);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

		}
		if (cate) {
			window.draw(text1);
			window.draw(text2);
			window.draw(text3);
			window.draw(text4);
			window.draw(text5);
			window.draw(text6);
			window.draw(text7);
			window.draw(choice10);
			window.draw(choice20);
			window.draw(choice30);
			window.draw(choice40);
			window.draw(choice50);
			window.draw(choice60);
			window.draw(choice70);
		}
		window.display();

	}
}

void addproduct(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(330.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(175, 30));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(175, 80));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(175, 130));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(100.0f, 30.0f));
	choice40.setPosition(sf::Vector2f(170, 173));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::White);
	choice40.setOutlineThickness(2);

	sf::RectangleShape choice41(sf::Vector2f(125.0f, 30.0f));
	choice41.setPosition(sf::Vector2f(370, 173));
	choice41.setFillColor(sf::Color::Transparent);
	choice41.setOutlineColor(sf::Color::White);
	choice41.setOutlineThickness(2);

	sf::RectangleShape choice42(sf::Vector2f(100.0f, 30.0f));
	choice42.setPosition(sf::Vector2f(570, 173));
	choice42.setFillColor(sf::Color::Transparent);
	choice42.setOutlineColor(sf::Color::White);
	choice42.setOutlineThickness(2);

	sf::RectangleShape choice51(sf::Vector2f(100.0f, 30.0f));
	choice51.setPosition(sf::Vector2f(250, 220));
	choice51.setFillColor(sf::Color::Transparent);
	choice51.setOutlineColor(sf::Color::White);
	choice51.setOutlineThickness(3);

	sf::RectangleShape choice52(sf::Vector2f(100.0f, 30.0f));
	choice52.setPosition(sf::Vector2f(450, 220));
	choice52.setFillColor(sf::Color::Transparent);
	choice52.setOutlineColor(sf::Color::White);
	choice52.setOutlineThickness(3);

	sf::RectangleShape choice6(sf::Vector2f(330.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(175, 280));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(3);

	sf::RectangleShape choice7(sf::Vector2f(80.0f, 20.0f));
	choice7.setPosition(sf::Vector2f(670, 670));
	choice7.setFillColor(sf::Color::Transparent);
	choice7.setOutlineColor(sf::Color::Red);
	choice7.setOutlineThickness(3);

	sf::RectangleShape choice8(sf::Vector2f(80.0f, 20.0f));
	choice8.setPosition(sf::Vector2f(670, 720));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineColor(sf::Color::Red);
	choice8.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Name       :");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(10, 20);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font1);
	text2.setString(" Price        : ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(10, 70);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font1);
	text3.setString(" quantity  : ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(10, 120);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font1);
	text4.setString(" size     :  ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(10, 170);
	text4.setStyle(sf::Text::Bold);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Small ");
	text41.setCharacterSize(25);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(173, 170);
	text41.setStyle(sf::Text::Bold);

	sf::Font font42;
	font42.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text42;
	text42.setFont(font42);
	text42.setString(" Medium ");
	text42.setCharacterSize(25);
	text42.setFillColor(sf::Color::White);
	text42.setPosition(373, 170);
	text42.setStyle(sf::Text::Bold);

	sf::Font font43;
	font43.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text43;
	text43.setFont(font43);
	text43.setString(" Large ");
	text43.setCharacterSize(25);
	text43.setFillColor(sf::Color::White);
	text43.setPosition(573, 170);
	text43.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font1);
	text5.setString(" Type    : ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(10, 220);
	text5.setStyle(sf::Text::Bold);

	sf::Font font51;
	font51.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text51;
	text51.setFont(font51);
	text51.setString(" Female ");
	text51.setCharacterSize(25);
	text51.setFillColor(sf::Color::White);
	text51.setPosition(250, 220);
	text51.setStyle(sf::Text::Bold);

	sf::Font font52;
	font52.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text52;
	text52.setFont(font52);
	text52.setString("   Male ");
	text52.setCharacterSize(25);
	text52.setFillColor(sf::Color::White);
	text52.setPosition(450, 220);
	text52.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font1);
	text6.setString(" Color       :  ");
	text6.setCharacterSize(30);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(10, 270);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font1);
	text7.setString(" Save  ");
	text7.setCharacterSize(24);
	text7.setFillColor(sf::Color::Red);
	text7.setPosition(672, 663);
	text7.setStyle(sf::Text::Bold);

	sf::Font font8;
	font8.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text8;
	text8.setFont(font8);
	text8.setString(" Back  ");
	text8.setCharacterSize(24);
	text8.setFillColor(sf::Color::Red);
	text8.setPosition(672, 713);
	text8.setStyle(sf::Text::Bold);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(175, 25);

	sf::Font fontprice;
	fontprice.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String price;
	sf::Text textprice(price, fontprice, 25);
	textprice.setFillColor(sf::Color::Black);
	textprice.setPosition(175, 75);

	sf::Font fontquantity;
	fontquantity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String quantity;
	sf::Text textquantity(quantity, fontquantity, 25);
	textquantity.setFillColor(sf::Color::Black);
	textquantity.setPosition(175, 125);

	sf::Font fontcolor;
	fontcolor.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String color;
	sf::Text textcolor(color, fontcolor, 25);
	textcolor.setFillColor(sf::Color::Black);
	textcolor.setPosition(175, 275);

	bool clothing = false;
	int active = 0;

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 26 && localposition.y <= 52) {
					cout << "name " << endl;
					active = 1;
				}
				else if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 77 && localposition.y <= 101) {
					cout << "price" << endl;
					active = 2;

				}

				else if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 125 && localposition.y <= 151) {
					cout << "quantity" << endl;
					active = 3;

				}
				else if (localposition.x >= 170 && localposition.x <= 272 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "small" << endl;
					choice40.setOutlineColor(sf::Color::Red);
					choice41.setOutlineColor(sf::Color::White);
					choice42.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::Red);
					text42.setFillColor(sf::Color::White);
					text43.setFillColor(sf::Color::White);

					cout << active;
				}
				else if (localposition.x >= 368 && localposition.x <= 495 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "medium" << endl;
					choice40.setOutlineColor(sf::Color::White);
					choice41.setOutlineColor(sf::Color::Red);
					choice42.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::White);
					text42.setFillColor(sf::Color::Red);
					text43.setFillColor(sf::Color::White);
					cout << active;
				}
				else if (localposition.x >= 568 && localposition.x <= 672 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "large" << endl;
					choice40.setOutlineColor(sf::Color::White);
					choice41.setOutlineColor(sf::Color::White);
					choice42.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::White);
					text42.setFillColor(sf::Color::White);
					text43.setFillColor(sf::Color::Red);
					cout << active;
				}
				else if (localposition.x >= 246 && localposition.x <= 350 && localposition.y >= 215 && localposition.y <= 251 && clothing) {
					cout << "female" << endl;
					text51.setFillColor(sf::Color::Red);
					text52.setFillColor(sf::Color::White);
					choice51.setOutlineColor(sf::Color::Red);
					choice52.setOutlineColor(sf::Color::White);
				}
				else if (localposition.x >= 447 && localposition.x <= 553 && localposition.y >= 217 && localposition.y <= 249 && clothing) {
					cout << "male" << endl;
					text51.setFillColor(sf::Color::White);
					text52.setFillColor(sf::Color::Red);
					choice51.setOutlineColor(sf::Color::White);
					choice52.setOutlineColor(sf::Color::Red);
				}
				else if (localposition.x >= 171 && localposition.x <= 506 && localposition.y >= 277 && localposition.y <= 300 && clothing) {
					cout << "color" << endl;
					active = 4;
					cout << active;
				}
				else if (localposition.x >= 667 && localposition.x <= 751 && localposition.y >= 667 && localposition.y <= 692) {
					prodchoice(window, photo);
				}
				else if (localposition.x >= 667 && localposition.x <= 751 && localposition.y >= 716 && localposition.y <= 739) {
					prodchoice(window, photo);
				}
				else
				{
					active = 0;

				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					price += event.text.unicode;
					textprice.setString(price);
				}
				else if (active == 2 && event.text.unicode == 8 && price.getSize() > 0)
				{
					price.erase(price.getSize() - 1, price.getSize());
					textprice.setString(price);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					quantity += event.text.unicode;
					textquantity.setString(quantity);
				}
				else if (active == 3 && event.text.unicode == 8 && quantity.getSize() > 0)
				{
					quantity.erase(quantity.getSize() - 1, quantity.getSize());
					textquantity.setString(quantity);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					color += event.text.unicode;
					textcolor.setString(color);
				}
				else if (active == 4 && event.text.unicode == 8 && color.getSize() > 0)
				{
					color.erase(color.getSize() - 1, color.getSize());
					textcolor.setString(color);
				}
			}
		}

		window.draw(photo);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text7);
		window.draw(text8);
		window.draw(choice7);
		window.draw(choice8);
		window.draw(textname);
		window.draw(textprice);
		window.draw(textquantity);
		if (clothing) {

			window.draw(choice41);
			window.draw(choice40);
			window.draw(choice42);
			window.draw(choice51);
			window.draw(choice52);
			window.draw(choice6);
			window.draw(text41);
			window.draw(text42);
			window.draw(text43);
			window.draw(text51);
			window.draw(text52);
			window.draw(text6);
			window.draw(text5);
			window.draw(text4);
			window.draw(textcolor);

		}

		window.display();
	}

}

void homepageOwner(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 60.0f));
	choice1.setPosition(sf::Vector2f(235, 240));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice2(sf::Vector2f(320.0f, 60.0f));
	choice2.setPosition(sf::Vector2f(235, 480));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineThickness(5);
	choice2.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice3(sf::Vector2f(100.0f, 22.0f));
	choice3.setPosition(sf::Vector2f(685, 20));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::Red);
	choice3.setOutlineThickness(3);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("            Edit  ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(270, 249);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("      Products  ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(290, 490);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("Log Out");
	textc.setCharacterSize(20);
	textc.setFillColor(sf::Color::Red);
	textc.setPosition(700, 18);
	textc.setStyle(sf::Text::Bold);

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;

				if (localposition.x >= 230 && localposition.x <= 555 && localposition.y >= 235 && localposition.y <= 300) {
					cout << "edit" << endl;
					editowner(window, photo);

				}
				else if (localposition.x >= 230 && localposition.x <= 555 && localposition.y >= 480 && localposition.y <= 540) {
					cout << "Products" << endl;
					prodchoice(window, photo);
				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 17 && localposition.y <= 43) {
					welcome(window, photo);
				}
			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.display();
		}
	}
}

void discount(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(400.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(290, 110));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(400.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(290, 210));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::RectangleShape choice3(sf::Vector2f(400.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(290, 310));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(7);

	sf::RectangleShape choice4(sf::Vector2f(400.0f, 20.0f));
	choice4.setPosition(sf::Vector2f(290, 410));
	choice4.setFillColor(sf::Color::White);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(7);

	sf::RectangleShape choice5(sf::Vector2f(100.0f, 30.0f));
	choice5.setPosition(sf::Vector2f(500, 500));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(5);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(290, 105);


	sf::Font fontdiscount;
	fontdiscount.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String discount;
	sf::Text textdiscount(discount, fontdiscount, 25);
	textdiscount.setFillColor(sf::Color::Black);
	textdiscount.setPosition(290, 205);

	sf::Font fontday;
	fontday.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String day;
	sf::Text textday(day, fontday, 25);
	textday.setFillColor(sf::Color::Black);
	textday.setPosition(290, 305);

	sf::Font fontmonth;
	fontmonth.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String month;
	sf::Text textmonth(month, fontmonth, 25);
	textmonth.setFillColor(sf::Color::Black);
	textmonth.setPosition(290, 405);


	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" Product Name  :  ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(40, 100);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" Discount           : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(40, 200);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString(" Month              : ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(40, 300);
	textc.setStyle(sf::Text::Bold);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString(" Day                  : ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(40, 400);
	textd.setStyle(sf::Text::Bold);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("  ** Please fill in all of the Spaces ** ");
	texte.setCharacterSize(28);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(200, 445);
	texte.setStyle(sf::Text::Bold);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString(" Next ");
	textf.setCharacterSize(28);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(510, 495);
	textf.setStyle(sf::Text::Bold);


	bool fill = false;
	int active = 0;
	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 282 && localposition.x <= 696 && localposition.y >= 100 && localposition.y <= 135) {
					active = 1;
					cout << "Name" << endl;

				}
				else if (localposition.x >= 282 && localposition.x <= 695 && localposition.y >= 202 && localposition.y <= 235) {
					active = 2;
					cout << "Percentage" << endl;

				}
				else if (localposition.x >= 282 && localposition.x <= 695 && localposition.y >= 302 && localposition.y <= 333) {
					active = 3;
					cout << "Month" << endl;

				}
				else if (localposition.x >= 282 && localposition.x <= 695 && localposition.y >= 402 && localposition.y <= 434) {
					active = 4;
					cout << "Day" << endl;

				}
				else if (localposition.x >= 350 && localposition.x <= 750 && localposition.y >= 493 && localposition.y <= 538) {
					active = 5;
					cout << "Save" << endl;
					if (name != "" && discount != "" && month != "" && day != "") {
						fill = false;
					}
					else fill = true;
				}
				else
					active = 0;
			}

			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0) {
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					discount += event.text.unicode;
					textdiscount.setString(discount);
				}
				else if (active == 2 && event.text.unicode == 8 && discount.getSize() > 0) {
					discount.erase(discount.getSize() - 1, discount.getSize());
					textdiscount.setString(discount);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					month += event.text.unicode;
					textmonth.setString(month);
				}
				else if (active == 3 && event.text.unicode == 8 && month.getSize() > 0) {
					month.erase(month.getSize() - 1, month.getSize());
					textmonth.setString(month);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					day += event.text.unicode;
					textday.setString(day);
				}
				else if (active == 4 && event.text.unicode == 8 && day.getSize() > 0) {
					day.erase(day.getSize() - 1, day.getSize());
					textday.setString(day);
				}

			}
		}
		window.clear();
		window.draw(photo);
		window.draw(texta);
		window.draw(textb);
		window.draw(textc);
		window.draw(textd);
		window.draw(textf);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(textname);
		window.draw(textdiscount);
		window.draw(textmonth);
		window.draw(textday);
		if (fill) {
			window.draw(texte);
		}
		window.display();
	}
}

void remove(sf::RenderWindow& window, sf::RectangleShape photo) {

}

void viewproduct(sf::RenderWindow& window, sf::RectangleShape photo) {

	int number = 1, a[75];
	int z = 0;
	float hi = 50, ho = 50;
	bool next = false;
	bool done = false;
	int k = 0, n = 0;


	string nump[75];
	string price[75];
	string averating[75];
	string quantity[75];

	sf::String p;
	sf::Font fontp;
	fontp.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textp[75];

	sf::String name;
	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textname[75];


	sf::String num;
	sf::Font fontnum;
	fontnum.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textnum[75];

	sf::String cate;
	sf::Font fontcate;
	fontcate.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcate[75];

	sf::Font fontprice;
	fontprice.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textprice[75];

	sf::Font fontsize;
	fontsize.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textsize[75];

	sf::Font fontrating;
	fontrating.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textrating[75];

	sf::Font fontquantity;
	fontquantity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textquantity[75];

	sf::Font fonttype;
	fonttype.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texttype[75];

	sf::Font fontcolor;
	fontcolor.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcolor[75];

	sf::RectangleShape choice1(sf::Vector2f(100.0f, 30.0f));
	choice1.setPosition(sf::Vector2f(5, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(100.0f, 30.0f));
	choice2.setPosition(sf::Vector2f(120, 10));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(100.0f, 30.0f));
	choice3.setPosition(sf::Vector2f(235, 10));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(100.0f, 30.0f));
	choice4.setPosition(sf::Vector2f(350, 10));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(100.0f, 30.0f));
	choice5.setPosition(sf::Vector2f(465, 10));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choice6(sf::Vector2f(100.0f, 30.0f));
	choice6.setPosition(sf::Vector2f(580, 10));
	choice6.setFillColor(sf::Color::Transparent);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(3);

	sf::RectangleShape choice7(sf::Vector2f(100.0f, 30.0f));
	choice7.setPosition(sf::Vector2f(695, 10));
	choice7.setFillColor(sf::Color::Transparent);
	choice7.setOutlineColor(sf::Color::White);
	choice7.setOutlineThickness(3);

	sf::RectangleShape choice8(sf::Vector2f(100.0f, 30.0f));
	choice8.setPosition(sf::Vector2f(810, 10));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineColor(sf::Color::White);
	choice8.setOutlineThickness(3);


	sf::RectangleShape choice10(sf::Vector2f(130.0f, 30.0f));
	choice10.setPosition(sf::Vector2f(520, 745));
	choice10.setFillColor(sf::Color::Transparent);
	choice10.setOutlineColor(sf::Color::White);
	choice10.setOutlineThickness(3);

	sf::RectangleShape choice20(sf::Vector2f(80.0f, 30.0f));
	choice20.setPosition(sf::Vector2f(320, 745));
	choice20.setFillColor(sf::Color::Transparent);
	choice20.setOutlineColor(sf::Color::White);
	choice20.setOutlineThickness(3);

	sf::RectangleShape choice30(sf::Vector2f(50.0f, 25.0f));
	choice30.setPosition(sf::Vector2f(220, 748));
	choice30.setFillColor(sf::Color::White);
	choice30.setOutlineColor(sf::Color::White);
	choice30.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(80.0f, 30.0f));
	choice40.setPosition(sf::Vector2f(812, 748));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::Red);
	choice40.setOutlineThickness(3);

	sf::RectangleShape choice50(sf::Vector2f(130.0f, 30.0f));
	choice50.setPosition(sf::Vector2f(665, 745));
	choice50.setFillColor(sf::Color::Transparent);
	choice50.setOutlineColor(sf::Color::White);
	choice50.setOutlineThickness(3);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String c;
	sf::Text textc(c, fontc, 25);
	textc.setFillColor(sf::Color::Black);
	textc.setPosition(218, 743);


	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString(" BACK ");
	text10.setCharacterSize(20);
	text10.setFillColor(sf::Color::Red);
	text10.setPosition(820, 750);
	text10.setStyle(sf::Text::Bold);

	sf::Font font20;
	font20.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text20;
	text20.setFont(font20);
	text20.setString("  Next Page ");
	text20.setCharacterSize(22);
	text20.setFillColor(sf::Color::White);
	text20.setPosition(520, 745);
	text20.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Add ");
	text30.setCharacterSize(22);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(330, 745);
	text30.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString(" Previous ");
	text40.setCharacterSize(22);
	text40.setFillColor(sf::Color::White);
	text40.setPosition(680, 745);
	text40.setStyle(sf::Text::Bold);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" Product number :  ");
	text50.setCharacterSize(22);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(20, 748);
	text50.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" NAME ");
	text1.setCharacterSize(22);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(14, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString(" PRICE ");
	text2.setCharacterSize(22);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(130, 10);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" CATEGORY  ");
	text3.setCharacterSize(18);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(232, 14);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("  QUANTITY ");
	text4.setCharacterSize(19);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(340, 13);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  RATING ");
	text5.setCharacterSize(21);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(461, 11);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font6);
	text6.setString(" SIZE ");
	text6.setCharacterSize(22);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(598, 10);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font7);
	text7.setString(" TYPE ");
	text7.setCharacterSize(22);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(710, 10);
	text7.setStyle(sf::Text::Bold);

	sf::Font font8;
	font8.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text8;
	text8.setFont(font8);
	text8.setString(" COLOR ");
	text8.setCharacterSize(22);
	text8.setFillColor(sf::Color::White);
	text8.setPosition(820, 10);
	text8.setStyle(sf::Text::Bold);
	k = 0, n = 0;
	for (int i = 0, k = 0; i < maxOwners; i++) {
		for (int j = 0; j < maxProds; j++) {
			if (Owners[i].Shops.products[j].productPrice != 0) {
				textname[k].setString(Owners[i].Shops.products[j].productName);
				textcate[k].setString(Owners[i].Shops.products[j].Category);
				textsize[k].setString(Owners[i].Shops.products[j].Clothes.Size);
				texttype[k].setString(Owners[i].Shops.products[j].Clothes.Type);
				textcolor[k].setString(Owners[i].Shops.products[j].Clothes.Color);
				textp[k].setString(") ");
				n++;
				k++;
			}
		}
	}

	k = 0, n = 0;
	for (int i = 0; i < 75; i++) {
		a[i] = i + 1;
	}

	for (int i = 0; i < 75; i++) {
		long long price1 = a[i];
		while (price1 != 0)
		{
			int m = price1 % 10;
			nump[i] += m + '0';
			price1 /= 10;
		}
		reverse(nump[i].begin(), nump[i].end());
		textnum[i].setString(nump[i]);
	}

	for (int i = 0, k = 0; i < maxOwners; i++) {
		for (int j = 0; j < maxProds; j++) {
			if (Owners[i].Shops.products[j].productPrice != 0) {

				long long price2 = Owners[i].Shops.products[j].productPrice;
				long long price3 = Owners[i].Shops.products[j].Quantity;
				long long price4 = Owners[i].Shops.products[j].avgRating;

				while (price2 != 0) {
					int remainder = price2 % 10;
					price[k] += remainder + '0';
					price2 /= 10;
				}
				while (price3 != 0) {
					int remainder1 = price3 % 10;
					quantity[k] += remainder1 + '0';
					price3 /= 10;
				}
				while (price4 != 0)
				{
					int remainder2 = price4 % 10;
					averating[k] += remainder2 + '0';
					price4 /= 10;
				}


				reverse(price[k].begin(), price[k].end());
				textprice[k].setString(price[k]);
				reverse(quantity[k].begin(), quantity[k].end());
				textquantity[k].setString(quantity[k]);
				reverse(averating[k].begin(), averating[k].end());
				textrating[k].setString(averating[k]);
				n++;
				k++;
			}
		}
	}
	int active = 0;
	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 216 && localposition.x <= 273 && localposition.y >= 743 && localposition.y <= 774) {
					active = 1;
					cout << "nump" << endl;

				}
				else if (localposition.x >= 316 && localposition.x <= 402 && localposition.y >= 742 && localposition.y <= 776) {
					//function l add
					cout << "add" << endl;
					for (int i = 0; i < 5; i++) {
						c.erase(c.getSize() - 1, c.getSize());
						textc.setString(c);
						if (c.getSize() == 0)
							break;
					}
					done = true;

				}
				else if (localposition.x >= 517 && localposition.x <= 652 && localposition.y >= 742 && localposition.y <= 779 && next == false) {
					next = true;
					cout << "next" << endl;

				}
				else if (localposition.x >= 661 && localposition.x <= 797 && localposition.y >= 742 && localposition.y <= 774 && next == true) {
					next = false;
					cout << "previous" << endl;

				}
				else if (localposition.x >= 808 && localposition.x <= 893 && localposition.y >= 747 && localposition.y <= 778) {
					prodmenu(window, photo);
					cout << "back" << endl;

				}

				else
					active = 0;
			}

			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					c += event.text.unicode;
					textc.setString(c);
				}
				else if (active == 1 && event.text.unicode == 8 && c.getSize() > 0) {
					c.erase(c.getSize() - 1, c.getSize());
					textc.setString(c);
				}

			}
		}

		for (; k < 32; k++) {


			textname[k].setPosition(32, hi);
			textname[k].setFont(fontname);
			textname[k].setCharacterSize(20);
			textprice[k].setPosition(165, hi);
			textprice[k].setFont(fontprice);
			textprice[k].setCharacterSize(20);
			textquantity[k].setPosition(400, hi);
			textquantity[k].setFont(fontprice);
			textquantity[k].setCharacterSize(20);
			textrating[k].setPosition(510, hi);
			textrating[k].setFont(fontprice);
			textrating[k].setCharacterSize(20);
			textcate[k].setPosition(232, ho);
			textcate[k].setFont(fontprice);
			textcate[k].setCharacterSize(15);
			textsize[k].setPosition(620, hi);
			textsize[k].setFont(fontname);
			textsize[k].setCharacterSize(20);
			texttype[k].setPosition(720, hi);
			texttype[k].setFont(fontname);
			texttype[k].setCharacterSize(20);
			textcolor[k].setPosition(840, hi);
			textcolor[k].setFont(fontname);
			textcolor[k].setCharacterSize(20);
			textnum[k].setPosition(1, hi);
			textnum[k].setFont(fontnum);
			textnum[k].setCharacterSize(20);
			textp[k].setPosition(23, hi);
			textp[k].setFont(fontp);
			textp[k].setCharacterSize(20);
			hi += 20;
			ho += 20.2;


		}
		hi = 30, ho = 30.3;
		for (k = 32; k < n; k++) {


			textname[k].setPosition(32, hi);
			textname[k].setFont(fontname);
			textname[k].setCharacterSize(20);
			textprice[k].setPosition(165, hi);
			textprice[k].setFont(fontprice);
			textprice[k].setCharacterSize(20);
			textquantity[k].setPosition(400, hi);
			textquantity[k].setFont(fontprice);
			textquantity[k].setCharacterSize(20);
			textrating[k].setPosition(510, hi);
			textrating[k].setFont(fontprice);
			textrating[k].setCharacterSize(20);
			textcate[k].setPosition(232, ho);
			textcate[k].setFont(fontprice);
			textcate[k].setCharacterSize(15);
			textsize[k].setPosition(620, hi);
			textsize[k].setFont(fontname);
			textsize[k].setCharacterSize(20);
			texttype[k].setPosition(720, hi);
			texttype[k].setFont(fontname);
			texttype[k].setCharacterSize(20);
			textcolor[k].setPosition(840, hi);
			textcolor[k].setFont(fontname);
			textcolor[k].setCharacterSize(20);
			textnum[k].setPosition(1, hi);
			textnum[k].setFont(fontnum);
			textnum[k].setCharacterSize(20);
			textp[k].setPosition(23, hi);
			textp[k].setFont(fontp);
			textp[k].setCharacterSize(10);
			hi += 20;
			ho += 20.2;


		}

		window.draw(photo);

		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text4);
		window.draw(text5);
		window.draw(text6);
		window.draw(text7);
		window.draw(text8);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(choice6);
		window.draw(choice7);
		window.draw(choice8);

		window.draw(choice20);
		window.draw(choice30);
		window.draw(choice40);

		window.draw(text10);

		window.draw(text30);
		window.draw(text50);

		window.draw(textc);
		if (next == false) {
			window.draw(text20);
			window.draw(choice10);
			for (k = 0; k < 32; k++) {

				window.draw(textname[k]);
				window.draw(textprice[k]);
				window.draw(textcate[k]);
				window.draw(textquantity[k]);
				window.draw(textrating[k]);
				window.draw(textsize[k]);
				window.draw(texttype[k]);
				window.draw(textcolor[k]);
				window.draw(textnum[k]);
				window.draw(textp[k]);
			}
		}
		if (next) {
			window.draw(text40);
			window.draw(choice50);
			;
			for (k = 33; k < 70; k++) {

				window.draw(textname[k]);
				window.draw(textprice[k]);
				window.draw(textcate[k]);
				window.draw(textquantity[k]);
				window.draw(textrating[k]);
				window.draw(textsize[k]);
				window.draw(texttype[k]);
				window.draw(textcolor[k]);
				window.draw(textnum[k]);
				window.draw(textp[k]);
			}
		}

		window.display();
	}
}

void viewproductsOwner(sf::RenderWindow& window, sf::RectangleShape photo) {

	int number = 1;
	int z = 0;
	float hi = 50;

	string price[75];
	string averating[75];
	string quantity[75];

	sf::String name;
	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textname[75];
	int k = 0, n = 0;

	sf::String cate;
	sf::Font fontcate;
	fontcate.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcate[75];

	sf::Font fontprice;
	fontprice.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textprice[75];

	sf::Font fontsize;
	fontsize.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textsize[75];

	sf::Font fontrating;
	fontrating.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textrating[75];

	sf::Font fontquantity;
	fontquantity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textquantity[75];

	sf::Font fonttype;
	fonttype.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texttype[75];

	sf::Font fontcolor;
	fontcolor.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcolor[75];

	sf::RectangleShape choice1(sf::Vector2f(120.0f, 30.0f));
	choice1.setPosition(sf::Vector2f(12, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(120.0f, 30.0f));
	choice4.setPosition(sf::Vector2f(273, 10));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(120.0f, 30.0f));
	choice5.setPosition(sf::Vector2f(403, 10));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(120.0f, 30.0f));
	choice2.setPosition(sf::Vector2f(143, 10));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice6(sf::Vector2f(120.0f, 30.0f));
	choice6.setPosition(sf::Vector2f(533, 10));
	choice6.setFillColor(sf::Color::Transparent);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(3);

	sf::RectangleShape choice7(sf::Vector2f(120.0f, 30.0f));
	choice7.setPosition(sf::Vector2f(663, 10));
	choice7.setFillColor(sf::Color::Transparent);
	choice7.setOutlineColor(sf::Color::White);
	choice7.setOutlineThickness(3);

	sf::RectangleShape choice8(sf::Vector2f(120.0f, 30.0f));
	choice8.setPosition(sf::Vector2f(793, 10));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineColor(sf::Color::White);
	choice8.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(80.0f, 30.0f));
	choice40.setPosition(sf::Vector2f(812, 748));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::Red);
	choice40.setOutlineThickness(3);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String c;
	sf::Text textc(c, fontc, 25);
	textc.setFillColor(sf::Color::Black);
	textc.setPosition(215, 748);


	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString(" BACK ");
	text10.setCharacterSize(20);
	text10.setFillColor(sf::Color::Red);
	text10.setPosition(820, 750);
	text10.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString("     NAME ");
	text1.setCharacterSize(22);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(14, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("  PRICE ");
	text2.setCharacterSize(22);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(160, 10);
	text2.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("  QUANTITY ");
	text4.setCharacterSize(22);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(265, 10);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  RATING ");
	text5.setCharacterSize(22);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(411, 10);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font6);
	text6.setString(" SIZE ");
	text6.setCharacterSize(22);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(560, 10);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font7);
	text7.setString(" TYPE ");
	text7.setCharacterSize(22);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(690, 10);
	text7.setStyle(sf::Text::Bold);

	sf::Font font8;
	font8.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text8;
	text8.setFont(font8);
	text8.setString(" COLOR ");
	text8.setCharacterSize(22);
	text8.setFillColor(sf::Color::White);
	text8.setPosition(810, 10);
	text8.setStyle(sf::Text::Bold);
	k = 0, n = 0;

	LogIndex = 1;

	for (int j = 0; j < maxProds; j++) {
		if (Owners[LogIndex].Shops.products[j].productPrice != 0) {
			textname[k].setString(Owners[LogIndex].Shops.products[j].productName);
			textsize[k].setString(Owners[LogIndex].Shops.products[j].Clothes.Size);
			texttype[k].setString(Owners[LogIndex].Shops.products[j].Clothes.Type);
			textcolor[k].setString(Owners[LogIndex].Shops.products[j].Clothes.Color);
			n++;
			k++;
		}
	}

	k = 0, n = 0;

	for (int j = 0; j < maxProds; j++) {
		if (Owners[LogIndex].Shops.products[j].productPrice != 0) {
			long long price2 = Owners[LogIndex].Shops.products[j].productPrice;
			long long price3 = Owners[LogIndex].Shops.products[j].Quantity;
			long long price4 = Owners[LogIndex].Shops.products[j].avgRating;

			while (price2 != 0) {
				int remainder = price2 % 10;
				price[k] += remainder + '0';
				price2 /= 10;
			}
			while (price3 != 0) {
				int remainder1 = price3 % 10;
				quantity[k] += remainder1 + '0';
				price3 /= 10;
			}
			while (price4 != 0)
			{
				int remainder2 = price4 % 10;
				averating[k] += remainder2 + '0';
				price4 /= 10;
			}

			reverse(price[k].begin(), price[k].end());
			textprice[k].setString(price[k]);
			reverse(quantity[k].begin(), quantity[k].end());
			textquantity[k].setString(quantity[k]);
			reverse(averating[k].begin(), averating[k].end());
			textrating[k].setString(averating[k]);
			n++;
			k++;
		}
	}

	k = 0;

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 810 && localposition.x <= 895 && localposition.y >= 749 && localposition.y <= 780) {

					cout << "back" << endl;
					prodchoice(window, photo);

				}

			}

		}

		for (; k < n; k++) {


			textname[k].setPosition(5, hi);
			textname[k].setFont(fontname);
			textname[k].setCharacterSize(20);
			textprice[k].setPosition(150, hi);
			textprice[k].setFont(fontprice);
			textprice[k].setCharacterSize(20);
			textquantity[k].setPosition(320, hi);
			textquantity[k].setFont(fontprice);
			textquantity[k].setCharacterSize(20);
			textrating[k].setPosition(510, hi);
			textrating[k].setFont(fontprice);
			textrating[k].setCharacterSize(20);
			textsize[k].setPosition(580, hi);
			textsize[k].setFont(fontname);
			textsize[k].setCharacterSize(20);
			texttype[k].setPosition(720, hi);
			texttype[k].setFont(fontname);
			texttype[k].setCharacterSize(20);
			textcolor[k].setPosition(840, hi);
			textcolor[k].setFont(fontname);
			textcolor[k].setCharacterSize(20);
			hi += 20;

		}

		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text4);
		window.draw(text5);
		window.draw(text6);
		window.draw(text7);
		window.draw(text8);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(choice6);
		window.draw(choice7);
		window.draw(choice8);
		window.draw(choice40);
		window.draw(text10);
		window.draw(textc);

		k = 0;
		for (; k < n; k++) {

			window.draw(textname[k]);
			window.draw(textprice[k]);
			window.draw(textquantity[k]);
			window.draw(textrating[k]);
			window.draw(textsize[k]);
			window.draw(texttype[k]);
			window.draw(textcolor[k]);
		}

		window.display();
	}
}

void editprod(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);



	sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
	choice4.setPosition(sf::Vector2f(250, 250));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);



	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
	choicem.setPosition(sf::Vector2f(160, 380));
	choicem.setFillColor(sf::Color::Transparent);
	choicem.setOutlineColor(sf::Color::White);
	choicem.setOutlineThickness(3);

	sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
	choicef.setPosition(sf::Vector2f(515, 380));
	choicef.setFillColor(sf::Color::Transparent);
	choicef.setOutlineColor(sf::Color::White);
	choicef.setOutlineThickness(3);


	sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
	choiceocpass.setPosition(sf::Vector2f(210, 182));
	choiceocpass.setFillColor(sf::Color::White);
	choiceocpass.setOutlineColor(sf::Color::White);
	choiceocpass.setOutlineThickness(3);

	sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
	choiceage.setPosition(sf::Vector2f(230, 320));
	choiceage.setFillColor(sf::Color::White);
	choiceage.setOutlineColor(sf::Color::White);
	choiceage.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 680));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 720));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(100.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(685, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);



	sf::String sname;
	sf::String spass;
	sf::String sgender;
	sf::String sage;
	sf::String scity;
	sf::String scountry;

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(230, 320);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(age, fontage, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontpasso;
	fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passo;
	sf::Text textpasso(age, fontage, 30);
	textpasso.setFillColor(sf::Color::Black);
	textpasso.setPosition(250, 180);


	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);



	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("     Edit Price ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);



	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("Edit Quantity ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(330, 250);
	text4.setStyle(sf::Text::Bold);



	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" New Price  :");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 172);
	text30.setStyle(sf::Text::Bold);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" New Quantity : ");
	text50.setCharacterSize(30);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(10, 310);
	text50.setStyle(sf::Text::Bold);




	bool bname = false;
	bool bpass = false;
	bool bgender = false;
	bool bage = false;
	bool badress = false;
	int active = 0;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}

				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit price" << endl;

					bpass = true;
				}

				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
					cout << "new price" << endl;
					active = 7;
					cout << active;

				}




				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 250 && localposition.y <= 290) {
					cout << "edit qunatity" << endl;
					bage = true;

				}
				else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558 && bage) {
					cout << "new quantity" << endl;
					active = 4;
					cout << active;

				}



				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					passo += event.text.unicode;
					textpasso.setString(passo);

				}
				else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
					passo.erase(passo.getSize() - 1, passo.getSize());
					textpasso.setString(passo);
				}


				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}





			}
		}

		window.clear();
		window.draw(text2);

		window.draw(text4);

		window.draw(choice1);
		window.draw(choice2);

		window.draw(choice4);

		window.draw(text0);
		window.draw(choicesave);



		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (bpass) {

			window.draw(text30);


			window.draw(choiceocpass);

			window.draw(textpasso);

		}
		if (bage) {
			window.draw(text50);
			window.draw(choiceage);
			window.draw(textage);
		}

		window.display();
	}
}

void cart(sf::RenderWindow& window, sf::RectangleShape photo) {

	int number = 1;
	int z = 0;
	float hi = 50, ho = 50;
	bool next = false;
	bool done = false;

	string price[75];
	string averating[75];
	string quantity[75];

	sf::String name;
	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textname[75];
	int k = 0, n = 0;

	sf::String cate;
	sf::Font fontcate;
	fontcate.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcate[75];

	sf::Font fontprice;
	fontprice.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textprice[75];

	sf::Font fontsize;
	fontsize.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textsize[75];

	sf::Font fontrating;
	fontrating.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textrating[75];

	sf::Font fontquantity;
	fontquantity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textquantity[75];

	sf::Font fonttype;
	fonttype.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texttype[75];

	sf::Font fontcolor;
	fontcolor.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textcolor[75];

	sf::RectangleShape choice1(sf::Vector2f(100.0f, 30.0f));
	choice1.setPosition(sf::Vector2f(5, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(100.0f, 30.0f));
	choice2.setPosition(sf::Vector2f(120, 10));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(100.0f, 30.0f));
	choice3.setPosition(sf::Vector2f(235, 10));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(100.0f, 30.0f));
	choice4.setPosition(sf::Vector2f(350, 10));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(100.0f, 30.0f));
	choice5.setPosition(sf::Vector2f(465, 10));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choice6(sf::Vector2f(100.0f, 30.0f));
	choice6.setPosition(sf::Vector2f(580, 10));
	choice6.setFillColor(sf::Color::Transparent);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(3);

	sf::RectangleShape choice7(sf::Vector2f(100.0f, 30.0f));
	choice7.setPosition(sf::Vector2f(695, 10));
	choice7.setFillColor(sf::Color::Transparent);
	choice7.setOutlineColor(sf::Color::White);
	choice7.setOutlineThickness(3);

	sf::RectangleShape choice8(sf::Vector2f(100.0f, 30.0f));
	choice8.setPosition(sf::Vector2f(810, 10));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineColor(sf::Color::White);
	choice8.setOutlineThickness(3);

	sf::RectangleShape choice20(sf::Vector2f(100.0f, 30.0f));
	choice20.setPosition(sf::Vector2f(700, 748));
	choice20.setFillColor(sf::Color::Transparent);
	choice20.setOutlineColor(sf::Color::Red);
	choice20.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(80.0f, 30.0f));
	choice40.setPosition(sf::Vector2f(812, 748));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::Red);
	choice40.setOutlineThickness(3);


	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String c;
	sf::Text textc(c, fontc, 25);
	textc.setFillColor(sf::Color::Black);
	textc.setPosition(218, 743);


	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString(" BACK ");
	text10.setCharacterSize(20);
	text10.setFillColor(sf::Color::Red);
	text10.setPosition(820, 750);
	text10.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString(" RECEIPT ");
	text40.setCharacterSize(22);
	text40.setFillColor(sf::Color::Red);
	text40.setPosition(700, 748);
	text40.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" NAME ");
	text1.setCharacterSize(22);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(14, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString(" PRICE ");
	text2.setCharacterSize(22);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(130, 10);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" CATEGORY  ");
	text3.setCharacterSize(18);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(232, 14);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("  QUANTITY ");
	text4.setCharacterSize(19);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(340, 13);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  RATING ");
	text5.setCharacterSize(21);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(461, 11);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font6);
	text6.setString(" SIZE ");
	text6.setCharacterSize(22);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(598, 10);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font7);
	text7.setString(" TYPE ");
	text7.setCharacterSize(22);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(710, 10);
	text7.setStyle(sf::Text::Bold);

	sf::Font font8;
	font8.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text8;
	text8.setFont(font8);
	text8.setString(" COLOR ");
	text8.setCharacterSize(22);
	text8.setFillColor(sf::Color::White);
	text8.setPosition(820, 10);
	text8.setStyle(sf::Text::Bold);
	k = 0, n = 0;
	for (int i = 0, k = 0; i < maxOwners; i++) {
		for (int j = 0; j < maxProds; j++) {
			if (Owners[i].Shops.products[j].productPrice != 0) {
				textname[k].setString(Owners[i].Shops.products[j].productName);
				textcate[k].setString(Owners[i].Shops.products[j].Category);
				textsize[k].setString(Owners[i].Shops.products[j].Clothes.Size);
				texttype[k].setString(Owners[i].Shops.products[j].Clothes.Type);
				textcolor[k].setString(Owners[i].Shops.products[j].Clothes.Color);
				n++;
				k++;
			}
		}
	}

	k = 0, n = 0;

	for (int i = 0, k = 0; i < maxOwners; i++) {
		for (int j = 0; j < maxProds; j++) {
			if (Owners[i].Shops.products[j].productPrice != 0) {
				long long price2 = Owners[i].Shops.products[j].productPrice;
				long long price3 = Owners[i].Shops.products[j].Quantity;
				long long price4 = Owners[i].Shops.products[j].avgRating;

				while (price2 != 0) {
					int remainder = price2 % 10;
					price[k] += remainder + '0';
					price2 /= 10;
				}
				while (price3 != 0) {
					int remainder1 = price3 % 10;
					quantity[k] += remainder1 + '0';
					price3 /= 10;
				}
				while (price4 != 0)
				{
					int remainder2 = price4 % 10;
					averating[k] += remainder2 + '0';
					price4 /= 10;
				}


				reverse(price[k].begin(), price[k].end());
				textprice[k].setString(price[k]);
				reverse(quantity[k].begin(), quantity[k].end());
				textquantity[k].setString(quantity[k]);
				reverse(averating[k].begin(), averating[k].end());
				textrating[k].setString(averating[k]);
				n++;
				k++;
			}
		}
	}
	int active = 0;
	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;

				if (localposition.x >= 697 && localposition.x <= 803 && localposition.y >= 744 && localposition.y <= 780) {
					cout << "recipt" << endl;
					receipt(window, photo);

				}
				else if (localposition.x >= 808 && localposition.x <= 893 && localposition.y >= 747 && localposition.y <= 778) {
					scchoice(window, photo);
					cout << "back" << endl;

				}
			}
		}

		for (; k < 32; k++) {


			textname[k].setPosition(5, hi);
			textname[k].setFont(fontname);
			textname[k].setCharacterSize(20);
			textprice[k].setPosition(150, hi);
			textprice[k].setFont(fontprice);
			textprice[k].setCharacterSize(20);
			textquantity[k].setPosition(400, hi);
			textquantity[k].setFont(fontprice);
			textquantity[k].setCharacterSize(20);
			textrating[k].setPosition(510, hi);
			textrating[k].setFont(fontprice);
			textrating[k].setCharacterSize(20);
			textcate[k].setPosition(232, ho);
			textcate[k].setFont(fontprice);
			textcate[k].setCharacterSize(15);
			textsize[k].setPosition(620, hi);
			textsize[k].setFont(fontname);
			textsize[k].setCharacterSize(20);
			texttype[k].setPosition(720, hi);
			texttype[k].setFont(fontname);
			texttype[k].setCharacterSize(20);
			textcolor[k].setPosition(840, hi);
			textcolor[k].setFont(fontname);
			textcolor[k].setCharacterSize(20);
			hi += 20;
			ho += 20.2;


		}

		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text4);
		window.draw(text5);
		window.draw(text6);
		window.draw(text7);
		window.draw(text8);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(choice6);
		window.draw(choice7);
		window.draw(choice8);
		window.draw(choice20);
		window.draw(choice40);
		window.draw(text10);
		window.draw(text40);
		window.draw(textc);
		for (k = 0; k < 30; k++) {

			window.draw(textname[k]);
			window.draw(textprice[k]);
			window.draw(textcate[k]);
			window.draw(textquantity[k]);
			window.draw(textrating[k]);
			window.draw(textsize[k]);
			window.draw(texttype[k]);
			window.draw(textcolor[k]);
			window.draw(textname[k]);
			window.draw(textprice[k]);
			window.draw(textcate[k]);
			window.draw(textquantity[k]);
			window.draw(textrating[k]);
			window.draw(textsize[k]);
			window.draw(texttype[k]);
			window.draw(textcolor[k]);

		}
		window.display();
	}
}

void deleteshopper(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(100.0f, 70.0f));
	choice1.setPosition(sf::Vector2f(250, 400));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(100.0f, 70.0f));
	choice2.setPosition(sf::Vector2f(600, 400));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Do You Want To Delete Your Account  ?");
	text1.setCharacterSize(40);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(100, 250);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString(" YES ");
	text2.setCharacterSize(40);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(255, 410);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" NO ");
	text3.setCharacterSize(40);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(610, 410);
	text3.setStyle(sf::Text::Bold);

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 245 && localposition.x <= 352 && localposition.y >= 395 && localposition.y <= 471) {
					welcome(window, photo);
					cout << "YES " << endl;

				}
				else if (localposition.x >= 597 && localposition.x <= 702 && localposition.y >= 397 && localposition.y <= 472) {
					scchoice(window, photo);
					cout << "NO" << endl;



				}
			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(choice1);
		window.draw(choice2);
		window.display();
	}


}

void receipt(sf::RenderWindow& window, sf::RectangleShape photo) {


}

void prodmenu(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice0(sf::Vector2f(80.0f, 25.0f));
	choice0.setPosition(sf::Vector2f(770, 15));
	choice0.setFillColor(sf::Color::Transparent);
	choice0.setOutlineThickness(3);
	choice0.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice01(sf::Vector2f(320.0f, 80.0f));
	choice01.setPosition(sf::Vector2f(250, 350));
	choice01.setFillColor(sf::Color::Transparent);
	choice01.setOutlineThickness(5);
	choice01.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 80.0f));
	choice1.setPosition(sf::Vector2f(250, 100));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 80.0f));
	choice5.setPosition(sf::Vector2f(250, 600));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("  BACK ");
	textz.setCharacterSize(20);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(770, 15);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fontq);
	textq.setString(" VIEW ALL ");
	textq.setCharacterSize(40);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(310, 360);
	textq.setStyle(sf::Text::Regular);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" FILTERS ");
	texta.setCharacterSize(40);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(310, 110);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" GIFTS  ");
	textb.setCharacterSize(40);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(330, 620);
	textb.setStyle(sf::Text::Bold);



	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 580 && localposition.y >= 94 && localposition.y <= 182) {
					cout << "filters" << endl;
					filtersmenu(window, photo);

				}
				else if (localposition.x >= 245 && localposition.x <= 576 && localposition.y >= 343 && localposition.y <= 437) {
					cout << "view all" << endl;
					viewproduct(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 577 && localposition.y >= 593 && localposition.y <= 684) {
					cout << "gifts" << endl;

				}
				else if (localposition.x >= 767 && localposition.x <= 852 && localposition.y >= 10 && localposition.y <= 43) {
					scchoice(window, photo);
					cout << "back" << endl;

				}

			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textz);
			window.draw(textq);
			window.draw(choice0);
			window.draw(choice01);
			window.draw(choice1);
			window.draw(choice5);
			window.display();
		}
	}

}

void filtersmenu(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice0(sf::Vector2f(80.0f, 25.0f));
	choice0.setPosition(sf::Vector2f(770, 15));
	choice0.setFillColor(sf::Color::Transparent);
	choice0.setOutlineThickness(3);
	choice0.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice01(sf::Vector2f(320.0f, 80.0f));
	choice01.setPosition(sf::Vector2f(250, 350));
	choice01.setFillColor(sf::Color::Transparent);
	choice01.setOutlineThickness(5);
	choice01.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 80.0f));
	choice1.setPosition(sf::Vector2f(250, 100));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 80.0f));
	choice5.setPosition(sf::Vector2f(250, 600));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("  BACK ");
	textz.setCharacterSize(20);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(770, 15);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fontq);
	textq.setString(" By Shop ");
	textq.setCharacterSize(40);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(310, 360);
	textq.setStyle(sf::Text::Regular);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" By Category ");
	texta.setCharacterSize(40);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(310, 110);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" By Price  ");
	textb.setCharacterSize(40);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(330, 620);
	textb.setStyle(sf::Text::Bold);



	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 580 && localposition.y >= 94 && localposition.y <= 182) {
					cout << "Shop" << endl;


				}
				else if (localposition.x >= 245 && localposition.x <= 576 && localposition.y >= 343 && localposition.y <= 437) {
					cout << "Category" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 577 && localposition.y >= 593 && localposition.y <= 684) {
					cout << "Price" << endl;


				}
				else if (localposition.x >= 767 && localposition.x <= 852 && localposition.y >= 10 && localposition.y <= 43) {
					cout << "back" << endl;
					prodmenu(window, photo);

				}

			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textz);
			window.draw(textq);
			window.draw(choice0);
			window.draw(choice01);
			window.draw(choice1);
			window.draw(choice5);
			window.display();
		}
	}

}
