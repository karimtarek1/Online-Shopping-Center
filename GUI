

#include <SFML\Graphics.hpp>
#include <string>
#include <iostream>
#include <string.h>
#include <conio.h>
#include<fstream>
#include <sstream>
#include <cstring>



using namespace std;
const int maxShoppers = 25, maxOwners = 25, maxProds = 10, maxPass = 32;
int LogIndex = maxOwners, day = 0, month = 0, LogID = 0;

struct views {

	int x;
	int y;

};
struct num {
	int nump = 0;
	int index = 0;
	views num[100];

}c;
struct  save
{
	views sav[100];
	int amount[100];
	double sub[100];

}k;
struct Clothing
{
	char Size;
	char Type;
	string Color;
};
struct Address {
	string Country;
	string City;
};
struct numm {
	int nump = 0;
	int index = 0;
}h;
struct cart {
	int quantity;
	string buyproduct = { 0 };
	double index;
	double index2;
	double price;
	string shop;
	int arri;
	int arrj;
	double subtotal = 0;
} shopperCart[100];
struct Product
{
	string productName = { 0 };
	double productPrice = 0;
	double oldPrice = 0;
	string Category;
	Clothing Clothes;
	int Quantity = 0;
	int counter = 0;
	double sum = 0;
	double avgRating;
	int month = 0;
	int day = 0;
};
struct Shop
{
	string ShopName;
	Address Add;
	string Category;
	Product products[maxProds];
	int countProd = 0;
};
struct counts {
	int countOwn = 0;
	int countShopper = 0;
}s;
struct Owner
{
	string Name;
	int ID;
	char Password[maxPass];
	int PassNum;
	int Age;
	string Gender;
	Address Add;
	Shop Shops;
} Owners[maxOwners];
struct shopper {
	string name;
	int id;
	char pass[maxPass];
	int passnum;
	int age;
	string gender;
	Address Add;
	double purchaseHistory[10];
	int days[10];
	int months[10];
	int purchases = 0;
}Shoppers[maxShoppers];



using namespace std;

void shopperchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void ownerchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void welcome(sf::RenderWindow& window, sf::RectangleShape photo);
void regshoper(sf::RenderWindow& window, sf::RectangleShape photo);
void regowner(sf::RenderWindow& window, sf::RectangleShape photo);
void loginowner(sf::RenderWindow& window, sf::RectangleShape photo);
void loginshopper(sf::RenderWindow& window, sf::RectangleShape photo);
void scchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void search(sf::RenderWindow& window, sf::RectangleShape photo);
void regshop(sf::RenderWindow& window, sf::RectangleShape photo);
void prodchoice(sf::RenderWindow& window, sf::RectangleShape photo);
void editshoper(sf::RenderWindow& window, sf::RectangleShape photo);
void editshop(sf::RenderWindow& window, sf::RectangleShape photo);
void editowner(sf::RenderWindow& window, sf::RectangleShape photo);
void addproduct(sf::RenderWindow& window, sf::RectangleShape photo);


int main() {

	sf::RenderWindow window(sf::VideoMode(800, 800), "                               ONLINE SHOPPING STORE", sf::Style::Close | sf::Style::Default);
	sf::RectangleShape photo(sf::Vector2f(800.0f, 800.0f));
	photo.setPosition(0, 0);
	sf::Texture wallpaper;
	wallpaper.loadFromFile("grunge-background-black-texture-450w-345043661 (1).jpg");
	photo.setTexture(&wallpaper);
	welcome(window, photo);

	return 0;
}



void welcome(sf::RenderWindow& window, sf::RectangleShape photo) {
	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString(" Shopper ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString(" S. Owner ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);


	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					ownerchoice(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					shopperchoice(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}
}

void regowner(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::RectangleShape choice3(sf::Vector2f(550.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 100));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(7);

	sf::RectangleShape choice4(sf::Vector2f(550.0f, 20.0f));
	choice4.setPosition(sf::Vector2f(200, 140));
	choice4.setFillColor(sf::Color::White);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(7);

	sf::RectangleShape choice5(sf::Vector2f(150.0f, 20.0f));
	choice5.setPosition(sf::Vector2f(200, 260));
	choice5.setFillColor(sf::Color::White);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(7);

	sf::RectangleShape choice6(sf::Vector2f(150.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(600, 260));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(7);


	sf::RectangleShape choice71(sf::Vector2f(150.0f, 20.0f));
	choice71.setPosition(sf::Vector2f(200, 180));
	choice71.setFillColor(sf::Color::Transparent);
	choice71.setOutlineThickness(3);
	choice71.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice72(sf::Vector2f(150.0f, 20.0f));
	choice72.setPosition(sf::Vector2f(400, 180));
	choice72.setFillColor(sf::Color::Transparent);
	choice72.setOutlineThickness(3);
	choice72.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passout;
	sf::Text textpass(passout, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String confout;
	sf::Text textconf(confout, fontc, 25);
	textconf.setFillColor(sf::Color::Black);
	textconf.setPosition(200, 95);

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(200, 135);

	sf::Font fontgend;
	fontgend.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String gender;
	sf::Text textgend(gender, fontage, 25);
	textgend.setFillColor(sf::Color::Black);
	textgend.setPosition(200, 175);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 255);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 255);


	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Name             : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password     : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("C.Password :");
	textz.setCharacterSize(30);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(10, 90);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontl;
	fontl.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("Age                : ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 130);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Gender          : ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(10, 170);
	textd.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fonta);
	textq.setString("    Male ");
	textq.setCharacterSize(20);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(235, 177);
	textq.setStyle(sf::Text::Regular); 
	
	sf::Font fontw;
	fontw.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textw;
	textw.setFont(fonta);
	textw.setString(" Female ");
	textw.setCharacterSize(20);
	textw.setFillColor(sf::Color::White);
	textw.setPosition(435, 177);
	textw.setStyle(sf::Text::Regular);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("Adress. ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(10, 210);
	texte.setStyle(sf::Text::Regular);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString("city                 :");
	textf.setCharacterSize(30);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(10, 250);
	textf.setStyle(sf::Text::Regular);

	sf::Font fontg;
	fontg.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textg;
	textg.setFont(fontg);
	textg.setString("Country           :");
	textg.setCharacterSize(30);
	textg.setFillColor(sf::Color::White);
	textg.setPosition(400, 250);
	textg.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("      Next   ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textid;
	textid.setFont(font);
	textid.setString("    Your ID Is : ");
	textid.setCharacterSize(40);
	textid.setFillColor(sf::Color::White);
	textid.setPosition(190, 430);
	textid.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontz);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(190 , 430);
	textk.setStyle(sf::Text::Bold);

	sf::Font fontn;
	fontn.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontz);
	textn.setString("  ** Password Must Be At Least 6 Digits **  ");
	textn.setCharacterSize(28);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 430);
	textn.setStyle(sf::Text::Bold);

	sf::String pass;
	sf::String conf;


	sf::Font fontj;
	fontj.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textj;
	textj.setFont(fontz);
	textj.setString ("  ** password Does Not Match ** ");
	textj.setCharacterSize(28);
	textj.setFillColor(sf::Color::White);
	textj.setPosition(190, 430);
	textj.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	bool password = false;
	bool numpassword = false;

	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
			
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 95 && localposition.y <= 128) {
					active = 3;
					cout << "confirmation" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 133 && localposition.y <= 165) {
					active = 4;
					cout << "age" << endl;

				}
				else if (localposition.x >= 197 && localposition.x <= 350 && localposition.y >= 177 && localposition.y <= 199) {
					active = 5;
					textq.setFillColor(sf::Color::Red);
					textw.setFillColor(sf::Color::White);
					choice71.setOutlineColor(sf::Color::Red);
					choice72.setOutlineColor(sf::Color::White);
					cout << "male" << endl;
					gender = ("male");

				}
				else if (localposition.x >= 397 && localposition.x <= 551 && localposition.y >= 177 && localposition.y <= 200) {
					active = 5;
					textw.setFillColor(sf::Color::Red);
					textq.setFillColor(sf::Color::White);
					choice72.setOutlineColor(sf::Color::Red);
					choice71.setOutlineColor(sf::Color::White);
					cout << "female" << endl;
					gender = ("female");

				}
				else if (localposition.x >= 193 && localposition.x <= 355 && localposition.y >= 255 && localposition.y <= 283) {
					active = 6;
					cout << "city" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 753 && localposition.y >= 255 && localposition.y <= 283) {
					active = 7;
					cout << "country" << endl;

				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() == 0 || age.getSize() == 0 || name.getSize() == 0 || city.getSize() == 0 && country.getSize() == 0) {
					fill = true;
					password = false;
					numpassword = false;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() > 5&& pass == conf  && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
	
					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;

				
					regshop(window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (gender == ("male") || gender == ("female")) && age.getSize() > 0 &&  pass.getSize() > 5 && conf.getSize() > 5 && pass != conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					
					numpassword = false;
					fill = false;
					password = true;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() <= 5 || conf.getSize() <= 5 && (pass != conf || pass == conf) && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					password = false;
					numpassword = true;
					fill = false;
				}
				else

					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					passout.erase(passout.getSize() - 1, passout.getSize());
					textpass.setString(passout);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					conf += event.text.unicode;
					confout += "*";
					textconf.setString(confout);
				}
				else if (active == 3 && event.text.unicode == 8 && conf.getSize() > 0) {
					conf.erase(conf.getSize() - 1, conf.getSize());
					confout.erase(confout.getSize() - 1, confout.getSize());
					textconf.setString(confout);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 6 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 7 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textf);
			window.draw(textg);
			window.draw(textz);
			window.draw(text);
			window.draw(textw);
			window.draw(textq);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.draw(choice71);
			window.draw(choice72);
			window.draw(choice8);
			window.draw(textname);
			window.draw(textpass);
			window.draw(textconf);
			window.draw(textage);
			window.draw(textgend);
			window.draw(textcity);
			window.draw(textcountry);
			if (fill)
				window.draw(textk);
			if (password)
				window.draw(textj);
			if (numpassword)
				window.draw(textn);

			window.display();

		}
	}
}

void regshoper(sf::RenderWindow& window, sf::RectangleShape photo) {

	

	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::RectangleShape choice3(sf::Vector2f(550.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 100));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(7);

	sf::RectangleShape choice4(sf::Vector2f(550.0f, 20.0f));
	choice4.setPosition(sf::Vector2f(200, 140));
	choice4.setFillColor(sf::Color::White);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(7);

	sf::RectangleShape choice5(sf::Vector2f(150.0f, 20.0f));
	choice5.setPosition(sf::Vector2f(200, 260));
	choice5.setFillColor(sf::Color::White);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(7);

	sf::RectangleShape choice6(sf::Vector2f(150.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(600, 260));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(7);


	sf::RectangleShape choice71(sf::Vector2f(150.0f, 20.0f));
	choice71.setPosition(sf::Vector2f(200, 180));
	choice71.setFillColor(sf::Color::Transparent);
	choice71.setOutlineThickness(3);
	choice71.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice72(sf::Vector2f(150.0f, 20.0f));
	choice72.setPosition(sf::Vector2f(400, 180));
	choice72.setFillColor(sf::Color::Transparent);
	choice72.setOutlineThickness(3);
	choice72.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passout;
	sf::Text textpass(passout, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String confout;
	sf::Text textconf(confout, fontc, 25);
	textconf.setFillColor(sf::Color::Black);
	textconf.setPosition(200, 95);

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(200, 135);

	sf::Font fontgend;
	fontgend.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String gender;
	sf::Text textgend(gender, fontage, 25);
	textgend.setFillColor(sf::Color::Black);
	textgend.setPosition(200, 175);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 255);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 255);


	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Name             : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password     : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontz;
	fontz.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textz;
	textz.setFont(fontz);
	textz.setString("C.Password :");
	textz.setCharacterSize(30);
	textz.setFillColor(sf::Color::White);
	textz.setPosition(10, 90);
	textz.setStyle(sf::Text::Regular);

	sf::Font fontl;
	fontl.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("Age                : ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 130);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Gender          : ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(10, 170);
	textd.setStyle(sf::Text::Regular);

	sf::Font fontq;
	fontq.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textq;
	textq.setFont(fonta);
	textq.setString("    Male ");
	textq.setCharacterSize(20);
	textq.setFillColor(sf::Color::White);
	textq.setPosition(235, 177);
	textq.setStyle(sf::Text::Regular);

	sf::Font fontw;
	fontw.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textw;
	textw.setFont(fonta);
	textw.setString(" Female ");
	textw.setCharacterSize(20);
	textw.setFillColor(sf::Color::White);
	textw.setPosition(435, 177);
	textw.setStyle(sf::Text::Regular);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("Adress. ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(10, 210);
	texte.setStyle(sf::Text::Regular);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString("city                 :");
	textf.setCharacterSize(30);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(10, 250);
	textf.setStyle(sf::Text::Regular);

	sf::Font fontg;
	fontg.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textg;
	textg.setFont(fontg);
	textg.setString("Country           :");
	textg.setCharacterSize(30);
	textg.setFillColor(sf::Color::White);
	textg.setPosition(400, 250);
	textg.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("      Next   ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textid;
	textid.setFont(font);
	textid.setString("    Your ID Is : ");
	textid.setCharacterSize(40);
	textid.setFillColor(sf::Color::White);
	textid.setPosition(190, 430);
	textid.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontz);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(190, 430);
	textk.setStyle(sf::Text::Bold);

	sf::Font fontn;
	fontn.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontz);
	textn.setString("  ** Password Must Be At Least 6 Digits **  ");
	textn.setCharacterSize(28);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 430);
	textn.setStyle(sf::Text::Bold);

	sf::String pass;
	sf::String conf;


	sf::Font fontj;
	fontj.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textj;
	textj.setFont(fontz);
	textj.setString("  ** password Does Not Match ** ");
	textj.setCharacterSize(28);
	textj.setFillColor(sf::Color::White);
	textj.setPosition(190, 430);
	textj.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	bool password = false;
	bool numpassword = false;

	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 95 && localposition.y <= 128) {
					active = 3;
					cout << "confirmation" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 133 && localposition.y <= 165) {
					active = 4;
					cout << "age" << endl;

				}
				else if (localposition.x >= 197 && localposition.x <= 350 && localposition.y >= 177 && localposition.y <= 199) {
					active = 5;
					textw.setFillColor(sf::Color::White);
					textq.setFillColor(sf::Color::Red);
					choice72.setOutlineColor(sf::Color::White);
					choice71.setOutlineColor(sf::Color::Red);
					cout << "male" << endl;
					gender = ("male");

				}
				else if (localposition.x >= 397 && localposition.x <= 551 && localposition.y >= 177 && localposition.y <= 200) {
					active = 5;
					textw.setFillColor(sf::Color::Red);
					textq.setFillColor(sf::Color::White);
					choice72.setOutlineColor(sf::Color::Red);
					choice71.setOutlineColor(sf::Color::White);
					cout << "female" << endl;
					gender = ("female");

				}
				else if (localposition.x >= 193 && localposition.x <= 355 && localposition.y >= 255 && localposition.y <= 283) {
					active = 6;
					cout << "city" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 753 && localposition.y >= 255 && localposition.y <= 283) {
					active = 7;
					cout << "country" << endl;

				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() == 0 || age.getSize() == 0 || name.getSize() == 0 || city.getSize() == 0 && country.getSize() == 0) {
					fill = true;
					password = false;
					numpassword = false;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() > 5 && pass == conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;


					scchoice (window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (gender == ("male") || gender == ("female")) && age.getSize() > 0 && pass.getSize() > 5 && conf.getSize() > 5 && pass != conf && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {

					numpassword = false;
					fill = false;
					password = true;
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && gender.getSize() > 0 && age.getSize() > 0 && pass.getSize() <= 5 || conf.getSize() <= 5 && (pass != conf || pass == conf) && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					password = false;
					numpassword = true;
					fill = false;
				}
				else

					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					passout.erase(passout.getSize() - 1, passout.getSize());
					textpass.setString(passout);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					conf += event.text.unicode;
					confout += "*";
					textconf.setString(confout);
				}
				else if (active == 3 && event.text.unicode == 8 && conf.getSize() > 0) {
					conf.erase(conf.getSize() - 1, conf.getSize());
					confout.erase(confout.getSize() - 1, confout.getSize());
					textconf.setString(confout);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 6 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 7 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textf);
			window.draw(textg);
			window.draw(textz);
			window.draw(text);
			window.draw(textw);
			window.draw(textq);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.draw(choice71);
			window.draw(choice72);
			window.draw(choice8);
			window.draw(textname);
			window.draw(textpass);
			window.draw(textconf);
			window.draw(textage);
			window.draw(textgend);
			window.draw(textcity);
			window.draw(textcountry);
			if (fill)
				window.draw(textk);
			if (password)
				window.draw(textj);
			if (numpassword)
				window.draw(textn);

			window.display();

		}
	}
}

void regshop(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(150.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(600, 115));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);


	sf::RectangleShape choice3(sf::Vector2f(150.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(200, 115));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineThickness(7);
	choice3.setOutlineColor(sf::Color::White);


	sf::RectangleShape choice8(sf::Vector2f(200.0f, 80.0f));
	choice8.setPosition(sf::Vector2f(450, 490));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineThickness(5);
	choice8.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice10(sf::Vector2f(330.0f, 40.0f));
	choice10.setPosition(sf::Vector2f(30, 190));
	choice10.setFillColor(sf::Color::Transparent);
	choice10.setOutlineColor(sf::Color::White);
	choice10.setOutlineThickness(3);

	sf::RectangleShape choice20(sf::Vector2f(330.0f, 40.0f));
	choice20.setPosition(sf::Vector2f(30, 260));
	choice20.setFillColor(sf::Color::Transparent);
	choice20.setOutlineColor(sf::Color::White);
	choice20.setOutlineThickness(3);

	sf::RectangleShape choice30(sf::Vector2f(330.0f, 40.0f));
	choice30.setPosition(sf::Vector2f(30, 330));
	choice30.setFillColor(sf::Color::Transparent);
	choice30.setOutlineColor(sf::Color::White);
	choice30.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(330.0f, 40.0f));
	choice40.setPosition(sf::Vector2f(30, 400));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::White);
	choice40.setOutlineThickness(3);

	sf::RectangleShape choice50(sf::Vector2f(330.0f, 40.0f));
	choice50.setPosition(sf::Vector2f(30, 470));
	choice50.setFillColor(sf::Color::Transparent);
	choice50.setOutlineColor(sf::Color::White);
	choice50.setOutlineThickness(3);

	sf::RectangleShape choice60(sf::Vector2f(330.0f, 40.0f));
	choice60.setPosition(sf::Vector2f(30, 540));
	choice60.setFillColor(sf::Color::Transparent);
	choice60.setOutlineColor(sf::Color::White);
	choice60.setOutlineThickness(3);

	sf::RectangleShape choice70(sf::Vector2f(330.0f, 40.0f));
	choice70.setPosition(sf::Vector2f(30, 610));
	choice70.setFillColor(sf::Color::Transparent);
	choice70.setOutlineColor(sf::Color::White);
	choice70.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Phones & Tablets ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(50, 188);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("      Electronics ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(60, 258);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString(" Makeup & Accessories ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(30, 328);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("        Clothing ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(60, 398);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("       Shoes & Bags ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(58, 468);
	text5.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font5);
	text6.setString("         Books ");
	text6.setCharacterSize(30);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(62, 538);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font5);
	text7.setString("         Gaming ");
	text7.setCharacterSize(30);
	text7.setFillColor(sf::Color::White);
	text7.setPosition(60, 608);
	text7.setStyle(sf::Text::Bold);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(200, 14);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(200, 107);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry (country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(600, 110);

	sf::String category;

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("Shop Name  : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Shop Adress. ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 60);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("city                 :");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(10, 105);
	textc.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("Country           :");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(400, 105);
	textd.setStyle(sf::Text::Regular);

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("    Register ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(430, 500);
	text.setStyle(sf::Text::Bold);

	sf::Font fontk;
	fontk.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textk;
	textk.setFont(fontk);
	textk.setString("  ** Please fill the spaces ** ");
	textk.setCharacterSize(28);
	textk.setFillColor(sf::Color::White);
	textk.setPosition(390, 400);
	textk.setStyle(sf::Text::Bold);

	int active;
	bool fill = false;
	while (window.isOpen()) {

		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 595 && localposition.x <= 758 && localposition.y >= 95 && localposition.y <= 140) {
					active = 2;
					cout << "country" << endl;
				}
				else if (localposition.x >= 193 && localposition.x <= 360 && localposition.y >= 95 && localposition.y <= 140) {
					active = 3;
					cout << "city" << endl;

				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 189 && localposition.y <= 227) {
					category = ("Phones & Tablets");
					cout << "phones & tablets" << endl;
					choice10.setOutlineColor(sf::Color::Red);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::Red);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 259 && localposition.y <=295) {
					category = ("Electronics");
					cout << "electronics" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::Red);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::Red);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 327 && localposition.y <= 370) {
					category =  ("Makeup & Accessories");
					cout << "makeup & accessories" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::Red);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::Red);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 399 && localposition.y <= 439) {
					category = ("Clothing");
					cout << "clothing" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::Red);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::Red);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 469 && localposition.y <= 505) {
					category = ("Shoes & Bags");
					cout << "shoes & bags" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::Red);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::Red);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 541 && localposition.y <= 575) {
					category = ("Books");
					cout << "books" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::Red);
					choice70.setOutlineColor(sf::Color::White);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::Red);
					text7.setFillColor(sf::Color::White);
				}
				else if (localposition.x >= 28 && localposition.x <= 362 && localposition.y >= 607 && localposition.y <= 649) {
					category = ("Gaming");
					cout << "gaming" << endl;
					choice10.setOutlineColor(sf::Color::White);
					choice20.setOutlineColor(sf::Color::White);
					choice30.setOutlineColor(sf::Color::White);
					choice40.setOutlineColor(sf::Color::White);
					choice50.setOutlineColor(sf::Color::White);
					choice60.setOutlineColor(sf::Color::White);
					choice70.setOutlineColor(sf::Color::Red);
					text1.setFillColor(sf::Color::White);
					text2.setFillColor(sf::Color::White);
					text3.setFillColor(sf::Color::White);
					text4.setFillColor(sf::Color::White);
					text5.setFillColor(sf::Color::White);
					text6.setFillColor(sf::Color::White);
					text7.setFillColor(sf::Color::Red);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && name.getSize() > 0 && city.getSize() > 0 && country.getSize() > 0) {
					prodchoice(window, photo);
				}
				else if (localposition.x >= 443 && localposition.x <= 652 && localposition.y >= 485 && localposition.y <= 569 && (name.getSize() > 0 || city.getSize() == 0 || country.getSize() == 0))
				{
					fill = true;
				}
				else
				
					active = 0;

			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 3 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 2 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
			}


			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(text);
			if (fill)
				window.draw(textk);
			window.draw(choice8);
			window.draw(choice1);
			window.draw(choice10);
			window.draw(choice20);
			window.draw(choice30);
			window.draw(choice40);
			window.draw(choice40);
			window.draw(choice50);
			window.draw(choice60);
			window.draw(choice70);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(textname);
			window.draw(text1);
			window.draw(text2);
			window.draw(text3);
			window.draw(text4);
			window.draw(text5);
			window.draw(text6);
		
			window.draw(text7);
			window.draw(textcity);
			window.draw(textcountry);

			window.display();

		}
	}

}

void prodchoice (sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 60.0f));
	choice1.setPosition(sf::Vector2f(250, 50));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice2(sf::Vector2f(320.0f, 60.0f));
	choice2.setPosition(sf::Vector2f(250, 175));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineThickness(5);
	choice2.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice3(sf::Vector2f(320.0f, 60.0f));
	choice3.setPosition(sf::Vector2f(250, 300));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineThickness(5);
	choice3.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice4(sf::Vector2f(320.0f, 60.0f));
	choice4.setPosition(sf::Vector2f(250, 425));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineThickness(5);
	choice4.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 60.0f));
	choice5.setPosition(sf::Vector2f(250, 550));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice6(sf::Vector2f(320.0f, 60.0f));
	choice6.setPosition(sf::Vector2f(250, 675));
	choice6.setFillColor(sf::Color::Transparent);
	choice6.setOutlineThickness(5);
	choice6.setOutlineColor(sf::Color::White);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" ADD PRODUCT ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(289, 60);
	texta.setStyle(sf::Text::Bold);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("  REMOVE PRODUCT ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(272, 185);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString("EDIT PRODUCT ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition(300, 310);
	textc.setStyle(sf::Text::Bold);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString("   VIEW YOUR PRODUCTS ");
	textd.setCharacterSize(29);
	textd.setFillColor(sf::Color::White);
	textd.setPosition(226, 435);
	textd.setStyle(sf::Text::Bold);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString("   DISCOUT PRODUCT  ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition(240, 560);
	texte.setStyle(sf::Text::Bold);

	sf::Font fontf;
	fontf.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textf;
	textf.setFont(fontf);
	textf.setString("     EDIT YOUR DATA  ");
	textf.setCharacterSize(30);
	textf.setFillColor(sf::Color::White);
	textf.setPosition(240, 685);
	textf.setStyle(sf::Text::Bold);


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 44 && localposition.y <= 114) {
					cout << "add" << endl;
					addproduct(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 168 && localposition.y <= 338) {
					cout << "remove" << endl;
					
				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 295 && localposition.y <= 363) {
					cout << "edit" << endl;
				

				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 421 && localposition.y <= 487) {
					cout << "view" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 544 && localposition.y <= 611) {
					cout << "discount" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 574 && localposition.y >= 670 && localposition.y <= 738) {
					cout << "edit" << endl;
					editowner(window, photo);

				}


			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(textf);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(choice6);
			window.display();
		}
	}


}

void loginshopper(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("ID                   : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password    : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontd);
	textn.setString("     login ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String id;
	sf::Text textid(id, fontid, 25);
	textid.setFillColor(sf::Color::Black);
	textid.setPosition(200, 14);
	 
	sf::String passout;


	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String pass;
	sf::Text textpass(pass, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);
	int active;
	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;

				}
				else if (localposition.x >= 145 && localposition.x <= 354 && localposition.y >= 485 && localposition.y <= 570 && pass.getSize() > 5 && id.getSize() > 0) {
					char *cstr = new char[(pass.getSize()) + 1];
					copy(pass.begin(), pass.end(), cstr);
					cstr[pass.getSize()] = '\0';

					cout << cstr;

					scchoice(window, photo);
				}
				else
					active = 0;
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					id += event.text.unicode;
					textid.setString(id);
				}
				else if (active == 1 && event.text.unicode == 8 && id.getSize() > 0)
				{
					id.erase(id.getSize() - 1, id.getSize());
					textid.setString(id);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += event.text.unicode;
					passout += "*";
					textpass.setString(passout);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					passout.erase(passout.getSize() - 1, passout.getSize());
					pass.erase(pass.getSize() - 1, pass.getSize());
					textpass.setString(passout);
				}
				
			}
		}
			window.clear();
			window.draw(photo);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(texta);
			window.draw(textb);
			window.draw(textn);
			window.draw(textpass);
			window.draw(textid);
			window.draw(choice);
			window.display();
		
	}


}

void scchoice(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(320.0f, 80.0f));
	choice1.setPosition(sf::Vector2f(250, 100));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineThickness(5);
	choice1.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice2(sf::Vector2f(320.0f, 80.0f));
	choice2.setPosition(sf::Vector2f(250, 225));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineThickness(5);
	choice2.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice3(sf::Vector2f(320.0f, 80.0f));
	choice3.setPosition(sf::Vector2f(250, 350 ));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineThickness(5);
	choice3.setOutlineColor(sf::Color::White);
	
	sf::RectangleShape choice4(sf::Vector2f(320.0f, 80.0f));
	choice4.setPosition(sf::Vector2f(250, 475));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineThickness(5);
	choice4.setOutlineColor(sf::Color::White);

	sf::RectangleShape choice5(sf::Vector2f(320.0f, 80.0f));
	choice5.setPosition(sf::Vector2f(250,  600));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineThickness(5);
	choice5.setOutlineColor(sf::Color::White);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" VIEW PRODUCTS ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(283, 118);
	texta.setStyle(sf::Text::Bold);
	
	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" SEARCH ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(333, 243);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontc;
	fontc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textc;
	textc.setFont(fontc);
	textc.setString(" EDIT INFORMATION ");
	textc.setCharacterSize(30);
	textc.setFillColor(sf::Color::White);
	textc.setPosition( 270 , 368);
	textc.setStyle(sf::Text::Bold);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textd;
	textd.setFont(fontd);
	textd.setString(" PARCHASE HISTORY ");
	textd.setCharacterSize(30);
	textd.setFillColor(sf::Color::White);
	textd.setPosition( 255 , 494);
	textd.setStyle(sf::Text::Bold);

	sf::Font fonte;
	fonte.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texte;
	texte.setFont(fonte);
	texte.setString(" DELETE ACCOUNT  ");
	texte.setCharacterSize(30);
	texte.setFillColor(sf::Color::White);
	texte.setPosition( 280 , 618);
	texte.setStyle(sf::Text::Bold);


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << "{" << localposition.x << "-" << localposition.y << "]" << endl;
				if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 93 && localposition.y <= 177) {
					cout << "view" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 221 && localposition.y <= 302) {
					cout << "srearch" << endl;
					search(window, photo);
				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 345 && localposition.y <= 428) {
					cout << "edit" << endl;
					editshoper(window, photo);

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 470 && localposition.y <= 553) {
					cout << "parchase" << endl;

				}
				else if (localposition.x >= 245 && localposition.x <= 570 && localposition.y >= 593 && localposition.y <= 680) {
					cout << "delete" << endl;

				}
				

			}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textb);
			window.draw(textc);
			window.draw(textd);
			window.draw(texte);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.display();
		}
	}
}

void search(sf::RenderWindow& window, sf::RectangleShape photo) {
	 
	
	
	sf::RectangleShape choice1(sf::Vector2f(330.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(300, 25));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choices(sf::Vector2f(86.0f, 25.0f));
	choices.setPosition(sf::Vector2f(695, 23));
	choices.setFillColor(sf::Color::Transparent);
	choices.setOutlineColor(sf::Color::Red);
	choices.setOutlineThickness(4);

	sf::RectangleShape choiceb(sf::Vector2f(86.0f, 25.0f));
	choiceb.setPosition(sf::Vector2f(695,700));
	choiceb.setFillColor(sf::Color::Transparent);
	choiceb.setOutlineColor(sf::Color::Red);
	choiceb.setOutlineThickness(4);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString(" Search ");
	textb.setCharacterSize(20);
	textb.setFillColor(sf::Color::Red);
	textb.setPosition(696, 23);
	textb.setStyle(sf::Text::Bold);

	sf::Font fontr;
	fontr.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textr;
	textr.setFont(fontr);
	textr.setString("   back ");
	textr.setCharacterSize(20);
	textr.setFillColor(sf::Color::Red);
	textr.setPosition(696, 700);
	textr.setStyle(sf::Text::Bold);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString(" Enter Product Name   : ");
	texta.setCharacterSize(20);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(30, 20);
	texta.setStyle(sf::Text::Bold);

	sf::Font fonts;
	fonts.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String searchh;
	sf::Text texts (searchh, fonts, 25);
	texts.setFillColor(sf::Color::Black);
	texts.setPosition(310 , 20);
	
	int active = 0;

	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 293 && localposition.x <= 638 && localposition.y >= 16 && localposition.y <= 52) {
					active = 1;
					cout << "search " << endl;
				
				}
				else if (localposition.x >= 691 && localposition.x <= 783 && localposition.y >= 19 && localposition.y <= 48) {
			       //feh for loop bt3rd
					cout << "search " << endl;

				}
				else if (localposition.x >= 690 && localposition.x <= 783 && localposition.y >= 696 && localposition.y <= 728) {
					scchoice(window, photo);
					cout << "back" << endl;

				}
				else
				{
					active = 0;
				}
			}
			if (event.type == sf::Event::TextEntered) {
				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					searchh += event.text.unicode;
					texts.setString(searchh);

				}
				else if (active == 1 && event.text.unicode == 8 && searchh.getSize() > 0) {
					searchh.erase(searchh.getSize() - 1, searchh.getSize());
					texts.setString(searchh);
				}

			}


		}
			window.clear();
			window.draw(photo);
			window.draw(texta);
			window.draw(textr);
			window.draw(choice1);
			window.draw(texts);
			window.draw(choices);
			window.draw(choiceb);
			window.draw(textb);
			window.display();
	}
	

}

void loginowner(sf::RenderWindow& window, sf::RectangleShape photo) {



	sf::RectangleShape choice1(sf::Vector2f(550.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(200, 20));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(7);

	sf::RectangleShape choice2(sf::Vector2f(550.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(200, 60));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(7);

	sf::Font fonta;
	fonta.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text texta;
	texta.setFont(fonta);
	texta.setString("ID                   : ");
	texta.setCharacterSize(30);
	texta.setFillColor(sf::Color::White);
	texta.setPosition(10, 10);
	texta.setStyle(sf::Text::Regular);

	sf::Font fontb;
	fontb.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textb;
	textb.setFont(fontb);
	textb.setString("Password    : ");
	textb.setCharacterSize(30);
	textb.setFillColor(sf::Color::White);
	textb.setPosition(10, 50);
	textb.setStyle(sf::Text::Regular);

	sf::Font fontd;
	fontd.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text textn;
	textn.setFont(fontd);
	textn.setString("     login ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);

	sf::Font fontid;
	fontid.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String id;
	sf::Text textid(id, fontid, 25);
	textid.setFillColor(sf::Color::Black);
	textid.setPosition(200, 14);

	sf::Font fontpass;
	fontpass.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String pass;
	sf::Text textpass(pass, fontpass, 25);
	textpass.setFillColor(sf::Color::Black);
	textpass.setPosition(200, 55);
	int active;
	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {

				sf::Vector2i localposition = sf::Mouse::getPosition(window);

				if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 16 && localposition.y <= 40) {
					active = 1;
					cout << "name" << endl;

				}
				else if (localposition.x >= 193 && localposition.x <= 750 && localposition.y >= 55 && localposition.y <= 82) {
					active = 2;
					cout << "password" << endl;

				}
				else if (localposition.x >= 145 && localposition.x <= 354 && localposition.y >= 485 && localposition.y <= 570 && pass.getSize() > 5 && id.getSize() > 0)
					prodchoice(window, photo);
				else
					active = 0;
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					id += event.text.unicode;
					textid.setString(id);
				}
				else if (active == 1 && event.text.unicode == 8 && id.getSize() > 0)
				{
					id.erase(id.getSize() - 1, id.getSize());
					textid.setString(id);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					pass += "*";
					textpass.setString(pass);

				}
				else if (active == 2 && event.text.unicode == 8 && pass.getSize() > 0) {
					pass.erase(pass.getSize() - 1, pass.getSize());
					textpass.setString(pass);
				}

			}
		}
		window.clear();
		window.draw(photo);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(texta);
		window.draw(textb);
		window.draw(textn);
		window.draw(textpass);
		window.draw(textid);
		window.draw(choice);
		window.display();

	}



}

void ownerchoice(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("     login ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString("Registration ");
	textn.setCharacterSize(35);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				textn.setFillColor(sf::Color::White);
				text.setFillColor(sf::Color::White);
				choicee.setOutlineColor(sf::Color::White);
				choice.setOutlineColor(sf::Color::White);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					regowner(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					loginowner(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}



}

void shopperchoice(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text;
	text.setFont(font);
	text.setString("     login ");
	text.setCharacterSize(40);
	text.setFillColor(sf::Color::White);
	text.setPosition(450, 500);
	text.setStyle(sf::Text::Bold);

	sf::Text textn;
	textn.setFont(font);
	textn.setString("Registration ");
	textn.setCharacterSize(35);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(200.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	sf::RectangleShape choicee(sf::Vector2f(200.0f, 80.0f));
	choicee.setPosition(sf::Vector2f(450, 490));
	choicee.setFillColor(sf::Color::Transparent);
	choicee.setOutlineThickness(5);
	choicee.setOutlineColor(sf::Color::White);

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				textn.setFillColor(sf::Color::White);
				text.setFillColor(sf::Color::White);
				choicee.setOutlineColor(sf::Color::White);
				choice.setOutlineColor(sf::Color::White);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					regshoper(window, photo);
					break;
				}
				else if (local_position.x >= 446 && local_position.x <= 651 && local_position.y >= 487 && local_position.y <= 570) {
					text.setFillColor(sf::Color::Red);
					choicee.setOutlineColor(sf::Color::Red);
					loginshopper(window, photo);
					break;
				}
			}
		}
		window.draw(photo);
		window.draw(choice);
		window.draw(choicee);
		window.draw(text);
		window.draw(textn);
		window.display();
	}

}

void editshoper(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 40.0f));
	choice3.setPosition(sf::Vector2f(250, 310));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
	choice4.setPosition(sf::Vector2f(250, 460));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(330.0f, 40.0f));
	choice5.setPosition(sf::Vector2f(250, 610));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
	choicem.setPosition(sf::Vector2f(160, 380));
	choicem.setFillColor(sf::Color::Transparent);
	choicem.setOutlineColor(sf::Color::White);
	choicem.setOutlineThickness(3);

	sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
	choicef.setPosition(sf::Vector2f(515, 380));
	choicef.setFillColor(sf::Color::Transparent);
	choicef.setOutlineColor(sf::Color::White);
	choicef.setOutlineThickness(3);

	sf::RectangleShape choicenpass(sf::Vector2f(330.0f, 22.0f));
	choicenpass.setPosition(sf::Vector2f(250, 220));
	choicenpass.setFillColor(sf::Color::White);
	choicenpass.setOutlineColor(sf::Color::White);
	choicenpass.setOutlineThickness(3);

	sf::RectangleShape choiceopass(sf::Vector2f(330.0f, 22.0f));
	choiceopass.setPosition(sf::Vector2f(250, 260));
	choiceopass.setFillColor(sf::Color::White);
	choiceopass.setOutlineColor(sf::Color::White);
	choiceopass.setOutlineThickness(3);

	sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
	choiceocpass.setPosition(sf::Vector2f(250, 182));
	choiceocpass.setFillColor(sf::Color::White);
	choiceocpass.setOutlineColor(sf::Color::White);
	choiceocpass.setOutlineThickness(3);

	sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
	choiceage.setPosition(sf::Vector2f(170, 535));
	choiceage.setFillColor(sf::Color::White);
	choiceage.setOutlineColor(sf::Color::White);
	choiceage.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 680));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 720));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(80.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(700, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);

	

	sf::String sname;
	sf::String spass;
	sf::String sgender;
	sf::String sage;
	sf::String scity;
	sf::String scountry;

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(174, 530);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(age, fontage, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontpasso;
	fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passo;
	sf::Text textpasso(age, fontage, 30);
	textpasso.setFillColor(sf::Color::Black);
	textpasso.setPosition(250, 215);

	sf::Font fontpasson;
	fontpasson.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passon;
	sf::Text textpasson(age, fontage, 30);
	textpasson.setFillColor(sf::Color::Black);
	textpasson.setPosition(250, 255);

	sf::Font fontpassonc;
	fontpassonc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passonc;
	sf::Text textpassonc(age, fontage, 30);
	textpassonc.setFillColor(sf::Color::Black);
	textpassonc.setPosition(250, 177);

    sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(age, fontage, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(155, 715);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(age, fontage, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(155, 675);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);
	
	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("Edit Password ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString("Edit Gender ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(325, 310);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("Edit  Age ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(330, 460);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  Edit Address ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(320, 610);
	text5.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Old Password   :");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 172);
	text30.setStyle(sf::Text::Bold);

	sf::Font font31;
	font31.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text31;
	text31.setFont(font31);
	text31.setString(" New Password :");
	text31.setCharacterSize(30);
	text31.setFillColor(sf::Color::White);
	text31.setPosition(10, 210);
	text31.setStyle(sf::Text::Bold);

	sf::Font font32;
	font32.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text32;
	text32.setFont(font31);
	text32.setString("C.New Password:");
	text32.setCharacterSize(30);
	text32.setFillColor(sf::Color::White);
	text32.setPosition(10, 250);
	text32.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString("    Male ");
	text40.setCharacterSize(40);
	text40.setFillColor(sf::Color::White);
	text40.setPosition(160, 380);
	text40.setStyle(sf::Text::Regular);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Female ");
	text41.setCharacterSize(40);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(530, 380);
	text41.setStyle(sf::Text::Regular);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" New Age : ");
	text50.setCharacterSize(30);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(10, 525);
	text50.setStyle(sf::Text::Bold);

	sf::Font font70;
	font70.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text70;
	text70.setFont(font50);
	text70.setString(" City       : ");
	text70.setCharacterSize(30);
	text70.setFillColor(sf::Color::White);
	text70.setPosition(10, 710);
	text70.setStyle(sf::Text::Bold);

	sf::Font font60;
	font60.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text60;
	text60.setFont(font50);
	text60.setString(" Country : ");
	text60.setCharacterSize(30);
	text60.setFillColor(sf::Color::White);
	text60.setPosition(10, 670);
	text60.setStyle(sf::Text::Bold);

	bool bname = false;
	bool bpass = false;
	bool bgender = false;
	bool bage = false;
	bool badress = false;
	int active =0;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
				    bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				else if (localposition.x >= 697 && localposition.x <= 781 && localposition.y >= 16 && localposition.y <= 43  ) {
					scchoice(window, photo);
				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit password" << endl;

					bpass = true;
				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 216 && localposition.y <= 239 && bpass) {
					cout << "new" << endl;
					active = 2;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
					cout << "old" << endl;
					active = 7;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 256 && localposition.y <= 281 && bpass) {
					cout << "confrmation" << endl;
					active = 3;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 309 && localposition.y <= 351) {
					cout << "edit gender" << endl;

					bgender = true;
				}
				else if (localposition.x >= 155 && localposition.x <= 330 && localposition.y >= 379 && localposition.y <= 430 && bgender ) {
					cout << "male" << endl;
					choicem.setOutlineColor(sf::Color::Red);
					text40.setFillColor(sf::Color::Red);
					sgender = ("Male");
				}
				else if (localposition.x >= 510 && localposition.x <= 686 && localposition.y >= 379 && localposition.y <= 430 && bgender ) {
					cout << "female" << endl;
					choicef.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::Red);
					sgender = ("Female");

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 458 && localposition.y <= 500) {
					cout << "edit age" << endl;
					bage = true;

				}
				else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558  && bage) {
					cout << "age" << endl;
					active = 4;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 606 && localposition.y <= 651) {
					cout << "edit address" << endl;
					badress = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 677 && localposition.y <= 703 && badress) {
					cout << "city" << endl;
					active = 5;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 714 && localposition.y <= 743 && badress) {
					cout << "country" << endl;
					active = 6;
					cout << active;
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if ( active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if ( active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if ( active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					passo += "*";
					textpasso.setString(passo);

				}
				else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
					passo.erase(passo.getSize() - 1, passo.getSize());
					textpasso.setString(passo);
				}
				if ( active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passon += "*";
					textpasson.setString(passon);
				}
				else if ( active == 3 && event.text.unicode == 8 && passon.getSize() > 0) {
					passon.erase(passon.getSize() - 1, passon.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpasson.setString(passon);
				}
				if ( active  == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
				
					age += event.text.unicode;
					textage.setString(age);
				}
				else if ( active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 5 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 5 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}

				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 6 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passonc += "*";
					textpassonc.setString(passonc);
				}
				else if (active == 7 && event.text.unicode == 8 && passonc.getSize() > 0) {
					passonc.erase(passonc.getSize() - 1, passonc.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpassonc.setString(passonc);
				}
				
				
			}
		}

			window.clear();
			window.draw(photo);
			window.draw(text1);
			window.draw(text2);
			window.draw(text3);
			window.draw(text4);
			window.draw(text5);
			window.draw(choice1);
			window.draw(choice2);
			window.draw(choice3);
			window.draw(choice4);
			window.draw(choice5);
			window.draw(text0);
			window.draw(choicesave);
			
			if (bgender) {
				window.draw(choicef);
				window.draw(text40);
				window.draw(text41);
				window.draw(choicem);
			}
			if (bname) {
			  
				window.draw(choicename);
			    window.draw(text10);
			    window.draw(textname);
			}
			if (bpass) {
              
				window.draw(text30);
			    window.draw(text31);
				window.draw(text32);
			    window.draw(choicenpass);
			    window.draw(choiceopass);
	     		window.draw(choiceocpass);
				window.draw(textpassonc);
		    	window.draw(textpasso);
		     	window.draw(textpasson);
			}
			if (bage) {
				window.draw(text50);
				window.draw(choiceage);
				window.draw(textage);
			}
			if (badress) {

			window.draw(text60);
			window.draw(text70);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

			}
			window.display();
	}

	
}

void editowner(sf::RenderWindow& window, sf::RectangleShape photo) {


	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 40.0f));
	choice3.setPosition(sf::Vector2f(250, 310));
	choice3.setFillColor(sf::Color::Transparent);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
	choice4.setPosition(sf::Vector2f(250, 460));
	choice4.setFillColor(sf::Color::Transparent);
	choice4.setOutlineColor(sf::Color::White);
	choice4.setOutlineThickness(3);

	sf::RectangleShape choice5(sf::Vector2f(330.0f, 40.0f));
	choice5.setPosition(sf::Vector2f(250, 610));
	choice5.setFillColor(sf::Color::Transparent);
	choice5.setOutlineColor(sf::Color::White);
	choice5.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
	choicem.setPosition(sf::Vector2f(160, 380));
	choicem.setFillColor(sf::Color::Transparent);
	choicem.setOutlineColor(sf::Color::White);
	choicem.setOutlineThickness(3);

	sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
	choicef.setPosition(sf::Vector2f(515, 380));
	choicef.setFillColor(sf::Color::Transparent);
	choicef.setOutlineColor(sf::Color::White);
	choicef.setOutlineThickness(3);

	sf::RectangleShape choicenpass(sf::Vector2f(330.0f, 22.0f));
	choicenpass.setPosition(sf::Vector2f(250, 220));
	choicenpass.setFillColor(sf::Color::White);
	choicenpass.setOutlineColor(sf::Color::White);
	choicenpass.setOutlineThickness(3);

	sf::RectangleShape choiceopass(sf::Vector2f(330.0f, 22.0f));
	choiceopass.setPosition(sf::Vector2f(250, 260));
	choiceopass.setFillColor(sf::Color::White);
	choiceopass.setOutlineColor(sf::Color::White);
	choiceopass.setOutlineThickness(3);

	sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
	choiceocpass.setPosition(sf::Vector2f(250, 182));
	choiceocpass.setFillColor(sf::Color::White);
	choiceocpass.setOutlineColor(sf::Color::White);
	choiceocpass.setOutlineThickness(3);

	sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
	choiceage.setPosition(sf::Vector2f(170, 535));
	choiceage.setFillColor(sf::Color::White);
	choiceage.setOutlineColor(sf::Color::White);
	choiceage.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 680));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 720));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(100.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(685, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);

	sf::RectangleShape choiceshop(sf::Vector2f(100.0f, 22.0f));
	choiceshop.setPosition(sf::Vector2f(685, 50));
	choiceshop.setFillColor(sf::Color::Transparent);
	choiceshop.setOutlineColor(sf::Color::Red);
	choiceshop.setOutlineThickness(3);

	sf::String sname;
	sf::String spass;
	sf::String sgender;
	sf::String sage;
	sf::String scity;
	sf::String scountry;

	sf::Font fontage;
	fontage.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String age;
	sf::Text textage(age, fontage, 25);
	textage.setFillColor(sf::Color::Black);
	textage.setPosition(174, 530);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(age, fontage, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontpasso;
	fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passo;
	sf::Text textpasso(age, fontage, 30);
	textpasso.setFillColor(sf::Color::Black);
	textpasso.setPosition(250, 215);

	sf::Font fontpasson;
	fontpasson.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passon;
	sf::Text textpasson(age, fontage, 30);
	textpasson.setFillColor(sf::Color::Black);
	textpasson.setPosition(250, 255);

	sf::Font fontpassonc;
	fontpassonc.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String passonc;
	sf::Text textpassonc(age, fontage, 30);
	textpassonc.setFillColor(sf::Color::Black);
	textpassonc.setPosition(250, 177);

	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(age, fontage, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(155, 715);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(age, fontage, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(155, 675);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font01;
	font01.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text01;
	text01.setFont(font01);
	text01.setString("Shop Data");
	text01.setCharacterSize(19);
	text01.setFillColor(sf::Color::Red);
	text01.setPosition(690, 48);
	text01.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("Edit Password ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font3);
	text3.setString("Edit Gender ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(325, 310);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font4);
	text4.setString("Edit  Age ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(330, 460);
	text4.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font5);
	text5.setString("  Edit Address ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(320, 610);
	text5.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Old Password   :");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 172);
	text30.setStyle(sf::Text::Bold);

	sf::Font font31;
	font31.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text31;
	text31.setFont(font31);
	text31.setString(" New Password :");
	text31.setCharacterSize(30);
	text31.setFillColor(sf::Color::White);
	text31.setPosition(10, 210);
	text31.setStyle(sf::Text::Bold);

	sf::Font font32;
	font32.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text32;
	text32.setFont(font31);
	text32.setString("C.New Password:");
	text32.setCharacterSize(30);
	text32.setFillColor(sf::Color::White);
	text32.setPosition(10, 250);
	text32.setStyle(sf::Text::Bold);

	sf::Font font40;
	font40.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text40;
	text40.setFont(font40);
	text40.setString("    Male ");
	text40.setCharacterSize(40);
	text40.setFillColor(sf::Color::White);
	text40.setPosition(160, 380);
	text40.setStyle(sf::Text::Regular);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Female ");
	text41.setCharacterSize(40);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(530, 380);
	text41.setStyle(sf::Text::Regular);

	sf::Font font50;
	font50.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text50;
	text50.setFont(font50);
	text50.setString(" New Age : ");
	text50.setCharacterSize(30);
	text50.setFillColor(sf::Color::White);
	text50.setPosition(10, 525);
	text50.setStyle(sf::Text::Bold);

	sf::Font font70;
	font70.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text70;
	text70.setFont(font50);
	text70.setString(" City       : ");
	text70.setCharacterSize(30);
	text70.setFillColor(sf::Color::White);
	text70.setPosition(10, 710);
	text70.setStyle(sf::Text::Bold);

	sf::Font font60;
	font60.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text60;
	text60.setFont(font50);
	text60.setString(" Country : ");
	text60.setCharacterSize(30);
	text60.setFillColor(sf::Color::White);
	text60.setPosition(10, 670);
	text60.setStyle(sf::Text::Bold);

	bool bname = false;
	bool bpass = false;
	bool bgender = false;
	bool bage = false;
	bool badress = false;
	int active = 0;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 48 && localposition.y <= 73) {
				editshop(window, photo);
				}
				else if (localposition.x >= 681 && localposition.x <= 786 && localposition.y >= 17 && localposition.y <= 43) {
					prodchoice(window, photo);
				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit password" << endl;

					bpass = true;
				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 216 && localposition.y <= 239 && bpass) {
					cout << "new" << endl;
					active = 2;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
					cout << "old" << endl;
					active = 7;
					cout << active;

				}
				else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 256 && localposition.y <= 281 && bpass) {
					cout << "confrmation" << endl;
					active = 3;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 309 && localposition.y <= 351) {
					cout << "edit gender" << endl;

					bgender = true;
				}
				else if (localposition.x >= 155 && localposition.x <= 330 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "male" << endl;
					choicem.setOutlineColor(sf::Color::Red);
					text40.setFillColor(sf::Color::Red);
					sgender = ("Male");
				}
				else if (localposition.x >= 510 && localposition.x <= 686 && localposition.y >= 379 && localposition.y <= 430 && bgender) {
					cout << "female" << endl;
					choicef.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::Red);
					sgender = ("Female");

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 458 && localposition.y <= 500) {
					cout << "edit age" << endl;
					bage = true;

				}
				else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558 && bage) {
					cout << "age" << endl;
					active = 4;
					cout << active;

				}
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 606 && localposition.y <= 651) {
					cout << "edit address" << endl;
					badress = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 677 && localposition.y <= 703 && badress) {
					cout << "city" << endl;
					active = 5;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 714 && localposition.y <= 743 && badress) {
					cout << "country" << endl;
					active = 6;
					cout << active;
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					passo += "*";
					textpasso.setString(passo);

				}
				else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
					passo.erase(passo.getSize() - 1, passo.getSize());
					textpasso.setString(passo);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passon += "*";
					textpasson.setString(passon);
				}
				else if (active == 3 && event.text.unicode == 8 && passon.getSize() > 0) {
					passon.erase(passon.getSize() - 1, passon.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpasson.setString(passon);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					age += event.text.unicode;
					textage.setString(age);
				}
				else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
					age.erase(age.getSize() - 1, age.getSize());
					textage.setString(age);
				}
				if (active == 5 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 5 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}

				if (active == 6 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 6 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 7 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					spass += event.text.unicode;
					passonc += "*";
					textpassonc.setString(passonc);
				}
				else if (active == 7 && event.text.unicode == 8 && passonc.getSize() > 0) {
					passonc.erase(passonc.getSize() - 1, passonc.getSize());
					spass.erase(spass.getSize() - 1, spass.getSize());
					textpassonc.setString(passonc);
				}


			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text4);
		window.draw(text5);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(choice4);
		window.draw(choice5);
		window.draw(text0);
		window.draw(choicesave);
		window.draw(text01);
		window.draw(choiceshop);
		if (bgender) {
			window.draw(choicef);
			window.draw(text40);
			window.draw(text41);
			window.draw(choicem);
		}
		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (bpass) {

			window.draw(text30);
			window.draw(text31);
			window.draw(text32);
			window.draw(choicenpass);
			window.draw(choiceopass);
			window.draw(choiceocpass);
			window.draw(textpassonc);
			window.draw(textpasso);
			window.draw(textpasson);
		}
		if (bage) {
			window.draw(text50);
			window.draw(choiceage);
			window.draw(textage);
		}
		if (badress) {

			window.draw(text60);
			window.draw(text70);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

		}
		window.display();
	}


}

void editshop(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
	choice1.setPosition(sf::Vector2f(250, 10));
	choice1.setFillColor(sf::Color::Transparent);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
	choice2.setPosition(sf::Vector2f(250, 130));
	choice2.setFillColor(sf::Color::Transparent);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choicesave(sf::Vector2f(80.0f, 22.0f));
	choicesave.setPosition(sf::Vector2f(700, 20));
	choicesave.setFillColor(sf::Color::Transparent);
	choicesave.setOutlineColor(sf::Color::Red);
	choicesave.setOutlineThickness(3);

	sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
	choicename.setPosition(sf::Vector2f(178, 88));
	choicename.setFillColor(sf::Color::White);
	choicename.setOutlineColor(sf::Color::White);
	choicename.setOutlineThickness(3);

	sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
	choicecountry.setPosition(sf::Vector2f(150, 190));
	choicecountry.setFillColor(sf::Color::White);
	choicecountry.setOutlineColor(sf::Color::White);
	choicecountry.setOutlineThickness(3);

	sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
	choicecity.setPosition(sf::Vector2f(150, 230));
	choicecity.setFillColor(sf::Color::White);
	choicecity.setOutlineColor(sf::Color::White);
	choicecity.setOutlineThickness(3);

	
	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(180, 83);

	sf::Font fontcountry;
	fontcountry.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String country;
	sf::Text textcountry(country, fontcountry, 25);
	textcountry.setFillColor(sf::Color::Black);
	textcountry.setPosition(150, 185);
	
	sf::Font fontcity;
	fontcity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String city;
	sf::Text textcity(city, fontcity, 25);
	textcity.setFillColor(sf::Color::Black);
	textcity.setPosition(150, 225);

	sf::Font font0;
	font0.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text0;
	text0.setFont(font0);
	text0.setString(" Save ");
	text0.setCharacterSize(20);
	text0.setFillColor(sf::Color::Red);
	text0.setPosition(708, 18);
	text0.setStyle(sf::Text::Bold);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Edit Name ");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(325, 10);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font2);
	text2.setString("  Edit Address ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(305, 130);
	text2.setStyle(sf::Text::Bold);

	sf::Font font10;
	font10.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text10;
	text10.setFont(font10);
	text10.setString("New Name: ");
	text10.setCharacterSize(30);
	text10.setFillColor(sf::Color::White);
	text10.setPosition(10, 80);
	text10.setStyle(sf::Text::Bold);

	sf::Font font20;
	font20.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text20;
	text20.setFont(font20);
	text20.setString(" City       : ");
	text20.setCharacterSize(30);
	text20.setFillColor(sf::Color::White);
	text20.setPosition(10, 220);
	text20.setStyle(sf::Text::Bold);

	sf::Font font30;
	font30.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text30;
	text30.setFont(font30);
	text30.setString(" Country : ");
	text30.setCharacterSize(30);
	text30.setFillColor(sf::Color::White);
	text30.setPosition(10, 180);
	text30.setStyle(sf::Text::Bold);

	bool badress= false;
	bool bname = false;
	int active = 0 ;


	while (window.isOpen())
	{

		sf::Event event;
		while (window.pollEvent(event))
		{

			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
					cout << "edit name " << endl;
					bname = true;
				}
				else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
					cout << "new name" << endl;
					active = 1;
					cout << active;

				}
				
				else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
					cout << "edit address" << endl;

					badress = true;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 225 && localposition.y <= 253 && badress) {
					cout << "city" << endl;
					active = 3;
					cout << active;
				}
				else if (localposition.x >= 147 && localposition.x <= 403 && localposition.y >= 186 && localposition.y <= 213 && badress) {
					cout << "country" << endl;
					active = 2;
					cout << active;
				}
				else if (localposition.x >= 697 && localposition.x <= 781 && localposition.y >= 16 && localposition.y <= 43) {
					prodchoice(window, photo);
				}
				else
				{
					active = 0;
					cout << active;
				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					country += event.text.unicode;
					textcountry.setString(country);
				}
				else if (active == 2 && event.text.unicode == 8 && country.getSize() > 0) {
					country.erase(country.getSize() - 1, country.getSize());
					textcountry.setString(country);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

					city += event.text.unicode;
					textcity.setString(city);
				}
				else if (active == 3 && event.text.unicode == 8 && city.getSize() > 0) {
					city.erase(city.getSize() - 1, city.getSize());
					textcity.setString(city);
				}

				
			}
		}

		window.clear();
		window.draw(photo);
		window.draw(text1);
		window.draw(text2);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choicesave);
		window.draw(text0);


		if (bname) {

			window.draw(choicename);
			window.draw(text10);
			window.draw(textname);
		}
		if (badress) {

			window.draw(text30);
			window.draw(text20);
			window.draw(choicecountry);
			window.draw(choicecity);
			window.draw(textcountry);
			window.draw(textcity);

		}
		window.display();

	}
}

void addproduct(sf::RenderWindow& window, sf::RectangleShape photo) {

	sf::RectangleShape choice1(sf::Vector2f(330.0f, 20.0f));
	choice1.setPosition(sf::Vector2f(175, 30));
	choice1.setFillColor(sf::Color::White);
	choice1.setOutlineColor(sf::Color::White);
	choice1.setOutlineThickness(3);

	sf::RectangleShape choice2(sf::Vector2f(330.0f, 20.0f));
	choice2.setPosition(sf::Vector2f(175, 80));
	choice2.setFillColor(sf::Color::White);
	choice2.setOutlineColor(sf::Color::White);
	choice2.setOutlineThickness(3);

	sf::RectangleShape choice3(sf::Vector2f(330.0f, 20.0f));
	choice3.setPosition(sf::Vector2f(175, 130));
	choice3.setFillColor(sf::Color::White);
	choice3.setOutlineColor(sf::Color::White);
	choice3.setOutlineThickness(3);

	sf::RectangleShape choice40(sf::Vector2f(100.0f, 30.0f));
	choice40.setPosition(sf::Vector2f(170, 173));
	choice40.setFillColor(sf::Color::Transparent);
	choice40.setOutlineColor(sf::Color::White);
	choice40.setOutlineThickness(2);

	sf::RectangleShape choice41(sf::Vector2f(125.0f, 30.0f));
	choice41.setPosition(sf::Vector2f(370, 173));
	choice41.setFillColor(sf::Color::Transparent);
	choice41.setOutlineColor(sf::Color::White);
	choice41.setOutlineThickness(2);

	sf::RectangleShape choice42(sf::Vector2f(100.0f, 30.0f));
	choice42.setPosition(sf::Vector2f(570, 173));
	choice42.setFillColor(sf::Color::Transparent);
	choice42.setOutlineColor(sf::Color::White);
	choice42.setOutlineThickness(2);

	sf::RectangleShape choice51(sf::Vector2f(100.0f, 30.0f));
	choice51.setPosition(sf::Vector2f(250, 220));
	choice51.setFillColor(sf::Color::Transparent);
	choice51.setOutlineColor(sf::Color::White);
	choice51.setOutlineThickness(3);

	sf::RectangleShape choice52(sf::Vector2f(100.0f, 30.0f));
	choice52.setPosition(sf::Vector2f(450, 220));
	choice52.setFillColor(sf::Color::Transparent);
	choice52.setOutlineColor(sf::Color::White);
	choice52.setOutlineThickness(3);

	sf::RectangleShape choice6(sf::Vector2f(330.0f, 20.0f));
	choice6.setPosition(sf::Vector2f(175, 280));
	choice6.setFillColor(sf::Color::White);
	choice6.setOutlineColor(sf::Color::White);
	choice6.setOutlineThickness(3);

	sf::RectangleShape choice7(sf::Vector2f(80.0f, 20.0f));
	choice7.setPosition(sf::Vector2f(670, 670));
	choice7.setFillColor(sf::Color::Transparent);
	choice7.setOutlineColor(sf::Color::Red);
	choice7.setOutlineThickness(3);

	sf::RectangleShape choice8(sf::Vector2f(80.0f, 20.0f));
	choice8.setPosition(sf::Vector2f(670, 720));
	choice8.setFillColor(sf::Color::Transparent);
	choice8.setOutlineColor(sf::Color::Red);
	choice8.setOutlineThickness(3);

	sf::Font font1;
	font1.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text1;
	text1.setFont(font1);
	text1.setString(" Name       :");
	text1.setCharacterSize(30);
	text1.setFillColor(sf::Color::White);
	text1.setPosition(10, 20);
	text1.setStyle(sf::Text::Bold);

	sf::Font font2;
	font2.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text2;
	text2.setFont(font1);
	text2.setString(" Price        : ");
	text2.setCharacterSize(30);
	text2.setFillColor(sf::Color::White);
	text2.setPosition(10, 70);
	text2.setStyle(sf::Text::Bold);

	sf::Font font3;
	font3.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text3;
	text3.setFont(font1);
	text3.setString(" quantity  : ");
	text3.setCharacterSize(30);
	text3.setFillColor(sf::Color::White);
	text3.setPosition(10, 120);
	text3.setStyle(sf::Text::Bold);

	sf::Font font4;
	font4.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text4;
	text4.setFont(font1);
	text4.setString(" size     :  ");
	text4.setCharacterSize(30);
	text4.setFillColor(sf::Color::White);
	text4.setPosition(10, 170);
	text4.setStyle(sf::Text::Bold);

	sf::Font font41;
	font41.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text41;
	text41.setFont(font41);
	text41.setString(" Small ");
	text41.setCharacterSize(25);
	text41.setFillColor(sf::Color::White);
	text41.setPosition(173, 170);
	text41.setStyle(sf::Text::Bold);

	sf::Font font42;
	font42.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text42;
	text42.setFont(font42);
	text42.setString(" Medium ");
	text42.setCharacterSize(25);
	text42.setFillColor(sf::Color::White);
	text42.setPosition(373, 170);
	text42.setStyle(sf::Text::Bold);

	sf::Font font43;
	font43.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text43;
	text43.setFont(font43);
	text43.setString(" Large ");
	text43.setCharacterSize(25);
	text43.setFillColor(sf::Color::White);
	text43.setPosition(573, 170);
	text43.setStyle(sf::Text::Bold);

	sf::Font font5;
	font5.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text5;
	text5.setFont(font1);
	text5.setString(" Type    : ");
	text5.setCharacterSize(30);
	text5.setFillColor(sf::Color::White);
	text5.setPosition(10, 220);
	text5.setStyle(sf::Text::Bold);

	sf::Font font51;
	font51.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text51;
	text51.setFont(font51);
	text51.setString(" Female ");
	text51.setCharacterSize(25);
	text51.setFillColor(sf::Color::White);
	text51.setPosition(250, 220);
	text51.setStyle(sf::Text::Bold);

	sf::Font font52;
	font52.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text52;
	text52.setFont(font52);
	text52.setString("   Male ");
	text52.setCharacterSize(25);
	text52.setFillColor(sf::Color::White);
	text52.setPosition(450, 220);
	text52.setStyle(sf::Text::Bold);

	sf::Font font6;
	font6.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text6;
	text6.setFont(font1);
	text6.setString(" Color       :  ");
	text6.setCharacterSize(30);
	text6.setFillColor(sf::Color::White);
	text6.setPosition(10, 270);
	text6.setStyle(sf::Text::Bold);

	sf::Font font7;
	font7.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text7;
	text7.setFont(font1);
	text7.setString(" Save  ");
	text7.setCharacterSize(24);
	text7.setFillColor(sf::Color::Red);
	text7.setPosition(672, 663);
	text7.setStyle(sf::Text::Bold);

	sf::Font font8;
	font8.loadFromFile("Roboto-MediumItalic.ttf");
	sf::Text text8;
	text8.setFont(font8);
	text8.setString(" Back  ");
	text8.setCharacterSize(24);
	text8.setFillColor(sf::Color::Red);
	text8.setPosition( 672, 713);
	text8.setStyle(sf::Text::Bold);

	sf::Font fontname;
	fontname.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String name;
	sf::Text textname(name, fontname, 25);
	textname.setFillColor(sf::Color::Black);
	textname.setPosition(175, 25);

	sf::Font fontprice;
	fontprice.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String price;
	sf::Text textprice(price, fontprice, 25);
	textprice.setFillColor(sf::Color::Black);
	textprice.setPosition(175, 75);
	
	sf::Font fontquantity;
	fontquantity.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String quantity;
	sf::Text textquantity(quantity, fontquantity, 25);
	textquantity.setFillColor(sf::Color::Black);
	textquantity.setPosition(175, 125);

	sf::Font fontcolor;
	fontcolor.loadFromFile("Roboto-MediumItalic.ttf");
	sf::String color;
	sf::Text textcolor(color, fontcolor, 25);
	textcolor.setFillColor(sf::Color::Black);
	textcolor.setPosition(175, 275);

	bool clothing = true;
	int active = 0;

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i localposition = sf::Mouse::getPosition(window);
				cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
				if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 26 && localposition.y <= 52) {
					cout << "name " << endl;
					active = 1;
				}
				else if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 77 && localposition.y <= 101) {
					cout << "price" << endl;
					active = 2;

				}

				else if (localposition.x >= 171 && localposition.x <= 507 && localposition.y >= 125 && localposition.y <= 151) {
					cout << "quantity" << endl;
					active = 3;

				}
				else if (localposition.x >= 170 && localposition.x <= 272 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "small" << endl;
					choice40.setOutlineColor(sf::Color::Red);
					choice41.setOutlineColor(sf::Color::White);
					choice42.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::Red);
					text42.setFillColor(sf::Color::White);
					text43.setFillColor(sf::Color::White);

					cout << active;
				}
				else if (localposition.x >= 368 && localposition.x <= 495 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "medium" << endl;
					choice40.setOutlineColor(sf::Color::White);
					choice41.setOutlineColor(sf::Color::Red);
					choice42.setOutlineColor(sf::Color::White);
					text41.setFillColor(sf::Color::White);
					text42.setFillColor(sf::Color::Red);
					text43.setFillColor(sf::Color::White);
					cout << active;
				}
				else if (localposition.x >= 568 && localposition.x <= 672 && localposition.y >= 171 && localposition.y <= 203 && clothing) {
					cout << "large" << endl;				
					choice40.setOutlineColor(sf::Color::White);
					choice41.setOutlineColor(sf::Color::White);
					choice42.setOutlineColor(sf::Color::Red);
					text41.setFillColor(sf::Color::White);
					text42.setFillColor(sf::Color::White);
					text43.setFillColor(sf::Color::Red);
					cout << active;
				}
				else if (localposition.x >= 246 && localposition.x <= 350 && localposition.y >= 215 && localposition.y <= 251 && clothing) {
					cout << "female" << endl;
					text51.setFillColor(sf::Color::Red);
					text52.setFillColor(sf::Color::White);
					choice51.setOutlineColor(sf::Color::Red);
					choice52.setOutlineColor(sf::Color::White);
				}
				else if (localposition.x >= 447 && localposition.x <= 553 && localposition.y >= 217 && localposition.y <= 249 && clothing) {
					cout << "male" << endl;
					text51.setFillColor(sf::Color::White);
					text52.setFillColor(sf::Color::Red);
					choice51.setOutlineColor(sf::Color::White);
					choice52.setOutlineColor(sf::Color::Red);
				}
				else if (localposition.x >= 171 && localposition.x <= 506 && localposition.y >= 277 && localposition.y <= 300 && clothing) {
					cout << "color" << endl;
					active = 4;
					cout << active;
				}
				else if (localposition.x >= 667 && localposition.x <= 751 && localposition.y >= 667 && localposition.y <= 692) {
					prodchoice(window, photo);
				}
				else if (localposition.x >= 667 && localposition.x <= 751 && localposition.y >= 716 && localposition.y <= 739) {
					prodchoice(window, photo);
				}
				else
				{
					active = 0;

				}
			}
			if (event.type == sf::Event::TextEntered) {

				if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					name += event.text.unicode;
					textname.setString(name);
				}
				else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
				{
					name.erase(name.getSize() - 1, name.getSize());
					textname.setString(name);
				}
				if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
				     price += event.text.unicode;
					textprice.setString(price);
				}
				else if (active == 2 && event.text.unicode == 8 && price.getSize() > 0)
				{
					price.erase(price.getSize() - 1, price.getSize());
					textprice.setString(price);
				}
				if (active == 3 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					quantity += event.text.unicode;
					textquantity.setString(quantity);
				}
				else if (active == 3 && event.text.unicode == 8 && quantity.getSize() > 0)
				{
					quantity.erase(quantity.getSize() - 1, quantity.getSize());
					textquantity.setString(quantity);
				}
				if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
					color += event.text.unicode;
					textcolor.setString(color);
				}
				else if (active == 4 && event.text.unicode == 8 && color.getSize() > 0)
				{
					color.erase(color.getSize() - 1, color.getSize());
					textcolor.setString(color);
				}
			}
		}

		window.draw(photo);
		window.draw(choice1);
		window.draw(choice2);
		window.draw(choice3);
		window.draw(text1);
		window.draw(text2);
		window.draw(text3);
		window.draw(text7);
		window.draw(text8);
		window.draw(choice7);
		window.draw(choice8);
		window.draw(textname);
		window.draw(textprice);
		window.draw(textquantity);
		if (clothing) {
			
			window.draw(choice41);
			window.draw(choice40);
			window.draw(choice42);
			window.draw(choice51);
			window.draw(choice52);
			window.draw(choice6);
			window.draw(text41);
			window.draw(text42);
			window.draw(text43);
			window.draw(text51);
			window.draw(text52);
			window.draw(text6);
			window.draw(text5);
			window.draw(text4);
			window.draw(textcolor);

		}

       window.display();
	}

}
