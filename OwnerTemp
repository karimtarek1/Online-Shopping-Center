int RegOwner(string name, char Password[], int passnum, int age, string gender, string country, string city)
{
	int  j;
	for (j = 0; j < maxOwners; j++)
	{
		if (Owners[j].Age == 0)
		{
			Owners[j].Name = name;
			for (int i = 0; i < maxPass; i++) {
				Owners[j].Password[i] = Password[i];
			}
			Owners[j].Age = age;
			Owners[j].Gender = gender;
			Owners[j].Add.Country = country;
			Owners[j].Add.City = city;
			s.countOwn++;
			system("pause");
			break;
		}
	}
	return j;
}


int Lowner(int id, char pass[] , int j)
{
	int  i;
	bool flag = true;
	int LogID;
	char LogPass[maxPass];

	LogID = id;
	for (i = 0; i < Owners[i].PassNum; i++) {
		LogPass[i] = pass[i];
	}



	for (i = 0; i < maxOwners; i++)
	{
		flag = true;
		if (j > Owners[i].PassNum || j < Owners[i].PassNum) {
			flag = false;
		}
		else if (j == Owners[i].PassNum) {
			for (int x = 0; x < Owners[i].PassNum; x++)
			{
				if (LogPass[x] != Owners[i].Password[x])
				{
					flag = false;
				}
			}
		}
		if (LogID == Owners[i].ID && (flag))
		{

			system("pause");
			system("cls");
			break;
		}

	}
	if (flag == false)
	{

		i = maxOwners;
	}
	return i;
}


void discount(int j,string name , int discount , int month2 , int day2)
{
		for (int i = 0; i < maxProds; i++)
		{
			if (Owners[j].Shops.products[i].productName == name)
			{
				while (choice)
				{
					if (discount <= 100)
					{
						choice = false;
							if (day <= 31 && month <= 12)
							{
								if (month2 >= month)
								{
									if (month2 == month) {
										if (day2 >= day)
										{
											discount = Owners[j].Shops.products[i].productPrice * (discount / 100);
											Owners[j].Shops.products[i].oldPrice = Owners[j].Shops.products[i].productPrice;
											Owners[j].Shops.products[i].productPrice = Owners[j].Shops.products[i].productPrice - discount;
										}
									}
									else {
										discount = Owners[j].Shops.products[i].productPrice * (discount / 100);
										Owners[j].Shops.products[i].oldPrice = Owners[j].Shops.products[i].productPrice;
										Owners[j].Shops.products[i].productPrice = Owners[j].Shops.products[i].productPrice - discount;
									}
								}
							}
					}
				}
			}
		}
}

void Rating(int ratenum , int rating)
{
		//heyetbe3etlo rukum elproduct
		if (ratenum <= c.nump)
		{
				//huyetbe3etlo elrating hena
				if (rating >= 1 && rating <= 5)
				{
					Owners[k.sav[ratenum - 1].x].Shops.products[k.sav[ratenum - 1].y].counter++;
					Owners[k.sav[ratenum - 1].x].Shops.products[k.sav[ratenum - 1].y].sum += rating;
					Owners[k.sav[ratenum - 1].x].Shops.products[k.sav[ratenum - 1].y].avgRating = Owners[k.sav[ratenum - 1].x].Shops.products[k.sav[ratenum - 1].y].sum / Owners[k.sav[ratenum - 1].x].Shops.products[k.sav[ratenum - 1].y].counter;
				}
				else
				{
					cout << "Invalid Rating.";
				}
		}
}
