#include <SFML\Graphics.hpp>
#include <string>
#include <iostream>
#include <string.h>
#include <conio.h>
#include<fstream>
#include <sstream>
#include <cstring>



using namespace std;
const int maxShoppers = 25, maxOwners = 25, maxProds = 10, maxPass = 32;
int LogIndex = maxOwners, day = 0, month = 0, LogID = 0;

struct views {

	int x;
	int y;

};
struct num {
	int nump = 0;
	int index = 0;
	views num[100];

}c;
struct  save
{
	views sav[100];
	int amount[100];
	double sub[100];

}k;
struct Clothing
{
	char Size;
	char Type;
	string Color;
};
struct Address {
	string Country;
	string City;
};
struct numm {
	int nump = 0;
	int index = 0;
}h;
struct cart {
	int quantity;
	string buyproduct = { 0 };
	double index;
	double index2;
	double price;
	string shop;
	int arri;
	int arrj;
	double subtotal = 0;
} shopperCart[100];
struct Product
{
	string productName = { 0 };
	double productPrice = 0;
	double oldPrice = 0;
	string Category;
	Clothing Clothes;
	int Quantity = 0;
	int counter = 0;
	double sum = 0;
	double avgRating;
	int month = 0;
	int day = 0;
};
struct Shop
{
	string ShopName;
	Address Add;
	string Category;
	Product products[maxProds];
	int countProd = 0;
};
struct counts {
	int countOwn = 0;
	int countShopper = 0;
}s;
struct Owner
{
	string Name;
	int ID;
	char Password[maxPass];
	int PassNum;
	int Age;
	string Gender;
	Address Add;
	Shop Shops;
} Owners[maxOwners];
struct shopper {
	string name;
	int id;
	char pass[maxPass];
	int passnum;
	int age;
	string gender;
	Address Add;
	double purchaseHistory[10];
	int days[10];
	int months[10];
	int purchases = 0;
}Shoppers[maxShoppers];



using namespace std;
void welcome(sf::RenderWindow& window, sf::RectangleShape photo);
void editprod(sf::RenderWindow& window, sf::RectangleShape photo);
int main() {

	sf::RenderWindow window(sf::VideoMode(800, 800), "                               ONLINE SHOPPING STORE", sf::Style::Close | sf::Style::Default);
	sf::RectangleShape photo(sf::Vector2f(800.0f, 800.0f));
	photo.setPosition(0, 0);
	sf::Texture wallpaper;
	wallpaper.loadFromFile("pexels-photo-908286.JPEG");
	photo.setTexture(&wallpaper);
	welcome(window, photo);

	
	return 0;
	
}
void welcome(sf::RenderWindow& window, sf::RectangleShape photo) {
	sf::Font font;
	font.loadFromFile("Roboto-MediumItalic.ttf");
	
	

	sf::Text textn;
	textn.setFont(font);
	textn.setString(" edit products ");
	textn.setCharacterSize(40);
	textn.setFillColor(sf::Color::White);
	textn.setPosition(150, 500);
	textn.setStyle(sf::Text::Bold);

	sf::RectangleShape choice(sf::Vector2f(280.0f, 80.0f));
	choice.setPosition(sf::Vector2f(150, 490));
	choice.setFillColor(sf::Color::Transparent);
	choice.setOutlineThickness(5);
	choice.setOutlineColor(sf::Color::White);
	


	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
			if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
				sf::Vector2i local_position = sf::Mouse::getPosition(window);
				cout << '(' << local_position.x << ',' << local_position.y << ')' << endl;
				if (local_position.x >= 146 && local_position.x <= 352 && local_position.y >= 487 && local_position.y <= 570) {
					choice.setOutlineColor(sf::Color::Red);
					textn.setFillColor(sf::Color::Red);
					window.clear();
					editprod(window, photo);
					break;
				}
				

			}
		}
		window.draw(photo);
		window.draw(choice);

		window.draw(textn);
		window.display();
	}
}


		void editprod(sf::RenderWindow& window, sf::RectangleShape photo) {


				sf::RectangleShape choice1(sf::Vector2f(330.0f, 40.0f));
				choice1.setPosition(sf::Vector2f(250, 10));
				choice1.setFillColor(sf::Color::Transparent);
				choice1.setOutlineColor(sf::Color::White);
				choice1.setOutlineThickness(3);

				sf::RectangleShape choice2(sf::Vector2f(330.0f, 40.0f));
				choice2.setPosition(sf::Vector2f(250, 130));
				choice2.setFillColor(sf::Color::Transparent);
				choice2.setOutlineColor(sf::Color::White);
				choice2.setOutlineThickness(3);

				

				sf::RectangleShape choice4(sf::Vector2f(330.0f, 40.0f));
				choice4.setPosition(sf::Vector2f(250, 250));
				choice4.setFillColor(sf::Color::Transparent);
				choice4.setOutlineColor(sf::Color::White);
				choice4.setOutlineThickness(3);

				

				sf::RectangleShape choicename(sf::Vector2f(330.0f, 22.0f));
				choicename.setPosition(sf::Vector2f(178, 88));
				choicename.setFillColor(sf::Color::White);
				choicename.setOutlineColor(sf::Color::White);
				choicename.setOutlineThickness(3);

				sf::RectangleShape choicem(sf::Vector2f(170.0f, 50.0f));
				choicem.setPosition(sf::Vector2f(160, 380));
				choicem.setFillColor(sf::Color::Transparent);
				choicem.setOutlineColor(sf::Color::White);
				choicem.setOutlineThickness(3);

				sf::RectangleShape choicef(sf::Vector2f(170.0f, 50.0f));
				choicef.setPosition(sf::Vector2f(515, 380));
				choicef.setFillColor(sf::Color::Transparent);
				choicef.setOutlineColor(sf::Color::White);
				choicef.setOutlineThickness(3);


				sf::RectangleShape choiceocpass(sf::Vector2f(330.0f, 22.0f));
				choiceocpass.setPosition(sf::Vector2f(210, 182));
				choiceocpass.setFillColor(sf::Color::White);
				choiceocpass.setOutlineColor(sf::Color::White);
				choiceocpass.setOutlineThickness(3);

				sf::RectangleShape choiceage(sf::Vector2f(330.0f, 22.0f));
				choiceage.setPosition(sf::Vector2f(230, 320));
				choiceage.setFillColor(sf::Color::White);
				choiceage.setOutlineColor(sf::Color::White);
				choiceage.setOutlineThickness(3);

				sf::RectangleShape choicecity(sf::Vector2f(250.0f, 22.0f));
				choicecity.setPosition(sf::Vector2f(150, 680));
				choicecity.setFillColor(sf::Color::White);
				choicecity.setOutlineColor(sf::Color::White);
				choicecity.setOutlineThickness(3);

				sf::RectangleShape choicecountry(sf::Vector2f(250.0f, 22.0f));
				choicecountry.setPosition(sf::Vector2f(150, 720));
				choicecountry.setFillColor(sf::Color::White);
				choicecountry.setOutlineColor(sf::Color::White);
				choicecountry.setOutlineThickness(3);

				sf::RectangleShape choicesave(sf::Vector2f(100.0f, 22.0f));
				choicesave.setPosition(sf::Vector2f(685, 20));
				choicesave.setFillColor(sf::Color::Transparent);
				choicesave.setOutlineColor(sf::Color::Red);
				choicesave.setOutlineThickness(3);

		

				sf::String sname;
				sf::String spass;
				sf::String sgender;
				sf::String sage;
				sf::String scity;
				sf::String scountry;

				sf::Font fontage;
				fontage.loadFromFile("Roboto-MediumItalic.ttf");
				sf::String age;
				sf::Text textage(age, fontage, 25);
				textage.setFillColor(sf::Color::Black);
				textage.setPosition(230, 320);

				sf::Font fontname;
				fontname.loadFromFile("Roboto-MediumItalic.ttf");
				sf::String name;
				sf::Text textname(age, fontage, 25);
				textname.setFillColor(sf::Color::Black);
				textname.setPosition(180, 83);

				sf::Font fontpasso;
				fontpasso.loadFromFile("Roboto-MediumItalic.ttf");
				sf::String passo;
				sf::Text textpasso(age, fontage, 30);
				textpasso.setFillColor(sf::Color::Black);
				textpasso.setPosition(250, 180);

				

				

				

				sf::Font font0;
				font0.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text0;
				text0.setFont(font0);
				text0.setString(" Save ");
				text0.setCharacterSize(20);
				text0.setFillColor(sf::Color::Red);
				text0.setPosition(708, 18);
				text0.setStyle(sf::Text::Bold);

				

				sf::Font font1;
				font1.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text1;
				text1.setFont(font1);
				text1.setString(" Edit Name ");
				text1.setCharacterSize(30);
				text1.setFillColor(sf::Color::White);
				text1.setPosition(325, 10);
				text1.setStyle(sf::Text::Bold);

				sf::Font font2;
				font2.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text2;
				text2.setFont(font2);
				text2.setString("     Edit Price ");
				text2.setCharacterSize(30);
				text2.setFillColor(sf::Color::White);
				text2.setPosition(305, 130);
				text2.setStyle(sf::Text::Bold);

				

				sf::Font font4;
				font4.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text4;
				text4.setFont(font4);
				text4.setString("Edit Quantity ");
				text4.setCharacterSize(30);
				text4.setFillColor(sf::Color::White);
				text4.setPosition(330, 250);
				text4.setStyle(sf::Text::Bold);

				

				sf::Font font10;
				font10.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text10;
				text10.setFont(font10);
				text10.setString("New Name: ");
				text10.setCharacterSize(30);
				text10.setFillColor(sf::Color::White);
				text10.setPosition(10, 80);
				text10.setStyle(sf::Text::Bold);

				sf::Font font30;
				font30.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text30;
				text30.setFont(font30);
				text30.setString(" New Price  :");
				text30.setCharacterSize(30);
				text30.setFillColor(sf::Color::White);
				text30.setPosition(10, 172);
				text30.setStyle(sf::Text::Bold);

				sf::Font font50;
				font50.loadFromFile("Roboto-MediumItalic.ttf");
				sf::Text text50;
				text50.setFont(font50);
				text50.setString(" New Quantity : ");
				text50.setCharacterSize(30);
				text50.setFillColor(sf::Color::White);
				text50.setPosition(10, 310);
				text50.setStyle(sf::Text::Bold);

				
				

				bool bname = false;
				bool bpass = false;
				bool bgender = false;
				bool bage = false;
				bool badress = false;
				int active = 0;


				while (window.isOpen())
				{

					sf::Event event;
					while (window.pollEvent(event))
					{

						if (event.type == sf::Event::Closed)
							window.close();
						if (sf::Mouse::isButtonPressed(sf::Mouse::Left)) {
							sf::Vector2i localposition = sf::Mouse::getPosition(window);
							cout << '(' << localposition.x << ',' << localposition.y << ')' << endl;
							if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 8 && localposition.y <= 47) {
								cout << "edit name " << endl;
								bname = true;
							}
							else if (localposition.x >= 175 && localposition.x <= 509 && localposition.y >= 86 && localposition.y <= 110 && bname) {
								cout << "new name" << endl;
								active = 1;
								cout << active;

							}

							else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 127 && localposition.y <= 169) {
								cout << "edit price" << endl;

								bpass = true;
							}
							
							else if (localposition.x >= 245 && localposition.x <= 581 && localposition.y >= 178 && localposition.y <= 203 && bpass) {
								cout << "new price" << endl;
								active = 7;
								cout << active;

							}
							
							
							
							
							else if (localposition.x >= 247 && localposition.x <= 582 && localposition.y >= 250 && localposition.y <= 290) {
								cout << "edit qunatity" << endl;
								bage = true;

							}
							else if (localposition.x >= 167 && localposition.x <= 500 && localposition.y >= 530 && localposition.y <= 558 && bage) {
								cout << "new quantity" << endl;
								active = 4;
								cout << active;

							}
						
							
							
							else
							{
								active = 0;
								cout << active;
							}
						}
						if (event.type == sf::Event::TextEntered) {

							if (active == 1 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
								name += event.text.unicode;
								textname.setString(name);
							}
							else if (active == 1 && event.text.unicode == 8 && name.getSize() > 0)
							{
								name.erase(name.getSize() - 1, name.getSize());
								textname.setString(name);
							}
							if (active == 2 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {
								passo += event.text.unicode;
								textpasso.setString(passo);

							}
							else if (active == 2 && event.text.unicode == 8 && passo.getSize() > 0) {
								passo.erase(passo.getSize() - 1, passo.getSize());
								textpasso.setString(passo);
							}
							
							
							if (active == 4 && event.text.unicode >= 32 && event.text.unicode <= 126 && event.text.unicode != 8) {

								age += event.text.unicode;
								textage.setString(age);
							}
							else if (active == 4 && event.text.unicode == 8 && age.getSize() > 0) {
								age.erase(age.getSize() - 1, age.getSize());
								textage.setString(age);
							}
							
							
							


						}
					}

					window.clear();
					window.draw(photo);
					window.draw(text1);
					window.draw(text2);
					
					window.draw(text4);
					
					window.draw(choice1);
					window.draw(choice2);
					
					window.draw(choice4);
					
					window.draw(text0);
					window.draw(choicesave);
					
					
					
					if (bname) {

						window.draw(choicename);
						window.draw(text10);
						window.draw(textname);
					}
					if (bpass) {

						window.draw(text30);
						
						
						window.draw(choiceocpass);
						
						window.draw(textpasso);
						
					}
					if (bage) {
						window.draw(text50);
						window.draw(choiceage);
						window.draw(textage);
					}
					
					window.display();
				}
			}

